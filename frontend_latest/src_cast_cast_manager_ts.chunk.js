"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["src_cast_cast_manager_ts"],{

/***/ "./src/cast/cast_framework.ts":
/*!************************************!*\
  !*** ./src/cast/cast_framework.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"castApiAvailable\": () => (/* binding */ castApiAvailable)\n/* harmony export */ });\n/* harmony import */ var _common_dom_load_resource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/dom/load_resource */ \"./src/common/dom/load_resource.ts\");\n\nlet loadedPromise;\nconst castApiAvailable = () => {\n  if (loadedPromise) {\n    return loadedPromise;\n  }\n\n  loadedPromise = new Promise(resolve => {\n    window.__onGCastApiAvailable = resolve;\n  }); // Any element with a specific ID will get set as a JS variable on window\n  // This will override the cast SDK if the iconset is loaded afterwards.\n  // Conflicting IDs will no longer mess with window, so we'll just append one.\n\n  const el = document.createElement(\"div\");\n  el.id = \"cast\";\n  document.body.append(el);\n  (0,_common_dom_load_resource__WEBPACK_IMPORTED_MODULE_0__.loadJS)(\"https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1\");\n  return loadedPromise;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2FzdC9jYXN0X2ZyYW1ld29yay50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vc3JjL2Nhc3QvY2FzdF9mcmFtZXdvcmsudHM/MzkzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2FkSlMgfSBmcm9tIFwiLi4vY29tbW9uL2RvbS9sb2FkX3Jlc291cmNlXCI7XG5cbmxldCBsb2FkZWRQcm9taXNlOiBQcm9taXNlPGJvb2xlYW4+IHwgdW5kZWZpbmVkO1xuXG5leHBvcnQgY29uc3QgY2FzdEFwaUF2YWlsYWJsZSA9ICgpID0+IHtcbiAgaWYgKGxvYWRlZFByb21pc2UpIHtcbiAgICByZXR1cm4gbG9hZGVkUHJvbWlzZTtcbiAgfVxuXG4gIGxvYWRlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICh3aW5kb3cgYXMgYW55KS5fX29uR0Nhc3RBcGlBdmFpbGFibGUgPSByZXNvbHZlO1xuICB9KTtcbiAgLy8gQW55IGVsZW1lbnQgd2l0aCBhIHNwZWNpZmljIElEIHdpbGwgZ2V0IHNldCBhcyBhIEpTIHZhcmlhYmxlIG9uIHdpbmRvd1xuICAvLyBUaGlzIHdpbGwgb3ZlcnJpZGUgdGhlIGNhc3QgU0RLIGlmIHRoZSBpY29uc2V0IGlzIGxvYWRlZCBhZnRlcndhcmRzLlxuICAvLyBDb25mbGljdGluZyBJRHMgd2lsbCBubyBsb25nZXIgbWVzcyB3aXRoIHdpbmRvdywgc28gd2UnbGwganVzdCBhcHBlbmQgb25lLlxuICBjb25zdCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGVsLmlkID0gXCJjYXN0XCI7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kKGVsKTtcblxuICBsb2FkSlMoXG4gICAgXCJodHRwczovL3d3dy5nc3RhdGljLmNvbS9jdi9qcy9zZW5kZXIvdjEvY2FzdF9zZW5kZXIuanM/bG9hZENhc3RGcmFtZXdvcms9MVwiXG4gICk7XG4gIHJldHVybiBsb2FkZWRQcm9taXNlO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/cast/cast_framework.ts\n");

/***/ }),

/***/ "./src/cast/cast_manager.ts":
/*!**********************************!*\
  !*** ./src/cast/cast_manager.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CastManager\": () => (/* binding */ CastManager),\n/* harmony export */   \"getCastManager\": () => (/* binding */ getCastManager)\n/* harmony export */ });\n/* harmony import */ var _cast_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cast_framework */ \"./src/cast/cast_framework.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./const */ \"./src/cast/const.ts\");\n/* harmony import */ var _dev_const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dev_const */ \"./src/cast/dev_const.ts\");\n/* harmony import */ var _receiver_messages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./receiver_messages */ \"./src/cast/receiver_messages.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-undef, no-console */\n\n\n\n\nlet managerProm;\nclass CastManager {\n  // If the cast connection is connected to our Hass.\n  constructor(auth) {\n    _defineProperty(this, \"auth\", void 0);\n\n    _defineProperty(this, \"status\", void 0);\n\n    _defineProperty(this, \"_eventListeners\", {});\n\n    this.auth = auth;\n    const context = this.castContext;\n    context.setOptions({\n      receiverApplicationId: _const__WEBPACK_IMPORTED_MODULE_1__.CAST_APP_ID,\n      autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED\n    });\n    context.addEventListener(cast.framework.CastContextEventType.SESSION_STATE_CHANGED, ev => this._sessionStateChanged(ev));\n    context.addEventListener(cast.framework.CastContextEventType.CAST_STATE_CHANGED, ev => this._castStateChanged(ev));\n  }\n\n  addEventListener(event, listener) {\n    if (!(event in this._eventListeners)) {\n      this._eventListeners[event] = [];\n    }\n\n    this._eventListeners[event].push(listener);\n\n    return () => {\n      this._eventListeners[event].splice(this._eventListeners[event].indexOf(listener));\n    };\n  }\n\n  get castConnectedToOurHass() {\n    return this.status !== undefined && this.auth !== undefined && this.status.connected && (this.status.hassUrl === this.auth.data.hassUrl || _const__WEBPACK_IMPORTED_MODULE_1__.CAST_DEV && this.status.hassUrl === _dev_const__WEBPACK_IMPORTED_MODULE_2__.CAST_DEV_HASS_URL);\n  }\n\n  sendMessage(msg) {\n    if (true) {\n      console.log(\"Sending cast message\", msg);\n    }\n\n    this.castSession.sendMessage(_const__WEBPACK_IMPORTED_MODULE_1__.CAST_NS, msg);\n  }\n\n  get castState() {\n    return this.castContext.getCastState();\n  }\n\n  get castContext() {\n    // @ts-ignore\n    return cast.framework.CastContext.getInstance();\n  }\n\n  get castSession() {\n    return this.castContext.getCurrentSession();\n  }\n\n  requestSession() {\n    return this.castContext.requestSession();\n  }\n\n  _fireEvent(event) {\n    for (const listener of this._eventListeners[event] || []) {\n      listener();\n    }\n  }\n\n  _receiveMessage(msg) {\n    if (true) {\n      console.log(\"Received cast message\", msg);\n    }\n\n    if (msg.type === \"receiver_status\") {\n      this.status = msg;\n\n      this._fireEvent(\"connection-changed\");\n    }\n  }\n\n  _sessionStateChanged(ev) {\n    if (true) {\n      console.log(\"Cast session state changed\", ev.sessionState);\n    } // On Android, opening a new session always results in SESSION_RESUMED.\n    // So treat both as the same.\n\n\n    if (ev.sessionState === \"SESSION_STARTED\" || ev.sessionState === \"SESSION_RESUMED\") {\n      if (this.auth) {\n        (0,_receiver_messages__WEBPACK_IMPORTED_MODULE_3__.castSendAuth)(this, this.auth);\n      } else {\n        // Only do if no auth, as this is done as part of sendAuth.\n        this.sendMessage({\n          type: \"get_status\"\n        });\n      }\n\n      this._attachMessageListener();\n    } else if (ev.sessionState === \"SESSION_ENDED\") {\n      this.status = undefined;\n\n      this._fireEvent(\"connection-changed\");\n    }\n  }\n\n  _castStateChanged(ev) {\n    if (true) {\n      console.log(\"Cast state changed\", ev.castState);\n    }\n\n    this._fireEvent(\"state-changed\");\n  }\n\n  _attachMessageListener() {\n    const session = this.castSession;\n    session.addMessageListener(_const__WEBPACK_IMPORTED_MODULE_1__.CAST_NS, (_ns, msg) => this._receiveMessage(JSON.parse(msg)));\n  }\n\n}\nconst getCastManager = auth => {\n  if (!managerProm) {\n    managerProm = (0,_cast_framework__WEBPACK_IMPORTED_MODULE_0__.castApiAvailable)().then(isAvailable => {\n      if (!isAvailable) {\n        throw new Error(\"No Cast API available\");\n      }\n\n      return new CastManager(auth);\n    });\n  }\n\n  return managerProm;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2FzdC9jYXN0X21hbmFnZXIudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFrQkE7QUFHQTtBQUtBO0FBQUE7O0FBQUE7O0FBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFJQTtBQUlBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBOztBQUVBO0FBQ0E7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFPQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFHQTs7QUEzSEE7QUE4SEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9zcmMvY2FzdC9jYXN0X21hbmFnZXIudHM/ZGVlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiwgbm8tY29uc29sZSAqL1xuaW1wb3J0IHtcbiAgQ2FzdFN0YXRlRXZlbnREYXRhLFxuICBTZXNzaW9uU3RhdGVFdmVudERhdGEsXG59IGZyb20gXCJjaHJvbWVjYXN0LWNhZi1yZWNlaXZlci9jYXN0LmZyYW1ld29ya1wiO1xuaW1wb3J0IHsgQXV0aCB9IGZyb20gXCJob21lLWFzc2lzdGFudC1qcy13ZWJzb2NrZXRcIjtcbmltcG9ydCB7IGNhc3RBcGlBdmFpbGFibGUgfSBmcm9tIFwiLi9jYXN0X2ZyYW1ld29ya1wiO1xuaW1wb3J0IHsgQ0FTVF9BUFBfSUQsIENBU1RfREVWLCBDQVNUX05TIH0gZnJvbSBcIi4vY29uc3RcIjtcbmltcG9ydCB7IENBU1RfREVWX0hBU1NfVVJMIH0gZnJvbSBcIi4vZGV2X2NvbnN0XCI7XG5pbXBvcnQge1xuICBjYXN0U2VuZEF1dGgsXG4gIEhhc3NNZXNzYWdlIGFzIFJlY2VpdmVyTWVzc2FnZSxcbn0gZnJvbSBcIi4vcmVjZWl2ZXJfbWVzc2FnZXNcIjtcbmltcG9ydCB7IFJlY2VpdmVyU3RhdHVzTWVzc2FnZSwgU2VuZGVyTWVzc2FnZSB9IGZyb20gXCIuL3NlbmRlcl9tZXNzYWdlc1wiO1xuXG5sZXQgbWFuYWdlclByb206IFByb21pc2U8Q2FzdE1hbmFnZXI+IHwgdW5kZWZpbmVkO1xuXG50eXBlIENhc3RFdmVudExpc3RlbmVyID0gKCkgPT4gdm9pZDtcblxuLypcbkdlbmVyYWwgZmxvdyBvZiBDaHJvbWVjYXN0OlxuXG5DaHJvbWVjYXN0IHNlc3Npb25zIGFyZSBzdGFydGVkIHZpYSB0aGUgQ2hyb21lY2FzdCBidXR0b24uIFdoZW4gY2xpY2tlZCwgc2Vzc2lvblxuc3RhdGUgY2hhbmdlcyB0byBzdGFydGVkLiBXZSB0aGVuIHNlbmQgYXV0aGVudGljYXRpb24sIHdoaWNoIHdpbGwgY2F1c2UgdGhlXG5yZWNlaXZlciBhcHAgdG8gc2VuZCBhIHN0YXR1cyB1cGRhdGUuXG5cbklmIGEgc2Vzc2lvbiBpcyBhbHJlYWR5IGFjdGl2ZSwgd2UgcXVlcnkgdGhlIHN0YXR1cyB0byBzZWUgd2hhdCBpdCBpcyB1cCB0by4gSWZcbmEgdXNlciBwcmVzc2VzIHRoZSBjYXN0IGJ1dHRvbiB3ZSBzZW5kIGF1dGggaWYgbm90IGNvbm5lY3RlZCB5ZXQsIHRoZW4gc2VuZFxuY29tbWFuZCBhcyB1c3VhbC5cbiovXG5cbnR5cGUgQ2FzdEV2ZW50ID0gXCJjb25uZWN0aW9uLWNoYW5nZWRcIiB8IFwic3RhdGUtY2hhbmdlZFwiO1xuXG5leHBvcnQgY2xhc3MgQ2FzdE1hbmFnZXIge1xuICBwdWJsaWMgYXV0aD86IEF1dGg7XG5cbiAgLy8gSWYgdGhlIGNhc3QgY29ubmVjdGlvbiBpcyBjb25uZWN0ZWQgdG8gb3VyIEhhc3MuXG4gIHB1YmxpYyBzdGF0dXM/OiBSZWNlaXZlclN0YXR1c01lc3NhZ2U7XG5cbiAgcHJpdmF0ZSBfZXZlbnRMaXN0ZW5lcnM6IHsgW2V2ZW50OiBzdHJpbmddOiBDYXN0RXZlbnRMaXN0ZW5lcltdIH0gPSB7fTtcblxuICBjb25zdHJ1Y3RvcihhdXRoPzogQXV0aCkge1xuICAgIHRoaXMuYXV0aCA9IGF1dGg7XG4gICAgY29uc3QgY29udGV4dCA9IHRoaXMuY2FzdENvbnRleHQ7XG4gICAgY29udGV4dC5zZXRPcHRpb25zKHtcbiAgICAgIHJlY2VpdmVyQXBwbGljYXRpb25JZDogQ0FTVF9BUFBfSUQsXG4gICAgICBhdXRvSm9pblBvbGljeTogY2hyb21lLmNhc3QuQXV0b0pvaW5Qb2xpY3kuT1JJR0lOX1NDT1BFRCxcbiAgICB9KTtcbiAgICBjb250ZXh0LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBjYXN0LmZyYW1ld29yay5DYXN0Q29udGV4dEV2ZW50VHlwZS5TRVNTSU9OX1NUQVRFX0NIQU5HRUQsXG4gICAgICAoZXYpID0+IHRoaXMuX3Nlc3Npb25TdGF0ZUNoYW5nZWQoZXYpXG4gICAgKTtcbiAgICBjb250ZXh0LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBjYXN0LmZyYW1ld29yay5DYXN0Q29udGV4dEV2ZW50VHlwZS5DQVNUX1NUQVRFX0NIQU5HRUQsXG4gICAgICAoZXYpID0+IHRoaXMuX2Nhc3RTdGF0ZUNoYW5nZWQoZXYpXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRFdmVudExpc3RlbmVyKGV2ZW50OiBDYXN0RXZlbnQsIGxpc3RlbmVyOiBDYXN0RXZlbnRMaXN0ZW5lcikge1xuICAgIGlmICghKGV2ZW50IGluIHRoaXMuX2V2ZW50TGlzdGVuZXJzKSkge1xuICAgICAgdGhpcy5fZXZlbnRMaXN0ZW5lcnNbZXZlbnRdID0gW107XG4gICAgfVxuICAgIHRoaXMuX2V2ZW50TGlzdGVuZXJzW2V2ZW50XS5wdXNoKGxpc3RlbmVyKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLl9ldmVudExpc3RlbmVyc1tldmVudF0uc3BsaWNlKFxuICAgICAgICB0aGlzLl9ldmVudExpc3RlbmVyc1tldmVudF0uaW5kZXhPZihsaXN0ZW5lcilcbiAgICAgICk7XG4gICAgfTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgY2FzdENvbm5lY3RlZFRvT3VySGFzcygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5zdGF0dXMgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgdGhpcy5hdXRoICE9PSB1bmRlZmluZWQgJiZcbiAgICAgIHRoaXMuc3RhdHVzLmNvbm5lY3RlZCAmJlxuICAgICAgKHRoaXMuc3RhdHVzLmhhc3NVcmwgPT09IHRoaXMuYXV0aC5kYXRhLmhhc3NVcmwgfHxcbiAgICAgICAgKENBU1RfREVWICYmIHRoaXMuc3RhdHVzLmhhc3NVcmwgPT09IENBU1RfREVWX0hBU1NfVVJMKSlcbiAgICApO1xuICB9XG5cbiAgcHVibGljIHNlbmRNZXNzYWdlKG1zZzogUmVjZWl2ZXJNZXNzYWdlKSB7XG4gICAgaWYgKF9fREVWX18pIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiU2VuZGluZyBjYXN0IG1lc3NhZ2VcIiwgbXNnKTtcbiAgICB9XG4gICAgdGhpcy5jYXN0U2Vzc2lvbi5zZW5kTWVzc2FnZShDQVNUX05TLCBtc2cpO1xuICB9XG5cbiAgcHVibGljIGdldCBjYXN0U3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2FzdENvbnRleHQuZ2V0Q2FzdFN0YXRlKCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGNhc3RDb250ZXh0KCkge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICByZXR1cm4gY2FzdC5mcmFtZXdvcmsuQ2FzdENvbnRleHQuZ2V0SW5zdGFuY2UoKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgY2FzdFNlc3Npb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuY2FzdENvbnRleHQuZ2V0Q3VycmVudFNlc3Npb24oKSE7XG4gIH1cblxuICBwdWJsaWMgcmVxdWVzdFNlc3Npb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuY2FzdENvbnRleHQucmVxdWVzdFNlc3Npb24oKTtcbiAgfVxuXG4gIHByaXZhdGUgX2ZpcmVFdmVudChldmVudDogQ2FzdEV2ZW50KSB7XG4gICAgZm9yIChjb25zdCBsaXN0ZW5lciBvZiB0aGlzLl9ldmVudExpc3RlbmVyc1tldmVudF0gfHwgW10pIHtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfcmVjZWl2ZU1lc3NhZ2UobXNnOiBTZW5kZXJNZXNzYWdlKSB7XG4gICAgaWYgKF9fREVWX18pIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiUmVjZWl2ZWQgY2FzdCBtZXNzYWdlXCIsIG1zZyk7XG4gICAgfVxuICAgIGlmIChtc2cudHlwZSA9PT0gXCJyZWNlaXZlcl9zdGF0dXNcIikge1xuICAgICAgdGhpcy5zdGF0dXMgPSBtc2c7XG4gICAgICB0aGlzLl9maXJlRXZlbnQoXCJjb25uZWN0aW9uLWNoYW5nZWRcIik7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfc2Vzc2lvblN0YXRlQ2hhbmdlZChldjogU2Vzc2lvblN0YXRlRXZlbnREYXRhKSB7XG4gICAgaWYgKF9fREVWX18pIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiQ2FzdCBzZXNzaW9uIHN0YXRlIGNoYW5nZWRcIiwgZXYuc2Vzc2lvblN0YXRlKTtcbiAgICB9XG4gICAgLy8gT24gQW5kcm9pZCwgb3BlbmluZyBhIG5ldyBzZXNzaW9uIGFsd2F5cyByZXN1bHRzIGluIFNFU1NJT05fUkVTVU1FRC5cbiAgICAvLyBTbyB0cmVhdCBib3RoIGFzIHRoZSBzYW1lLlxuICAgIGlmIChcbiAgICAgIGV2LnNlc3Npb25TdGF0ZSA9PT0gXCJTRVNTSU9OX1NUQVJURURcIiB8fFxuICAgICAgZXYuc2Vzc2lvblN0YXRlID09PSBcIlNFU1NJT05fUkVTVU1FRFwiXG4gICAgKSB7XG4gICAgICBpZiAodGhpcy5hdXRoKSB7XG4gICAgICAgIGNhc3RTZW5kQXV0aCh0aGlzLCB0aGlzLmF1dGgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gT25seSBkbyBpZiBubyBhdXRoLCBhcyB0aGlzIGlzIGRvbmUgYXMgcGFydCBvZiBzZW5kQXV0aC5cbiAgICAgICAgdGhpcy5zZW5kTWVzc2FnZSh7IHR5cGU6IFwiZ2V0X3N0YXR1c1wiIH0pO1xuICAgICAgfVxuICAgICAgdGhpcy5fYXR0YWNoTWVzc2FnZUxpc3RlbmVyKCk7XG4gICAgfSBlbHNlIGlmIChldi5zZXNzaW9uU3RhdGUgPT09IFwiU0VTU0lPTl9FTkRFRFwiKSB7XG4gICAgICB0aGlzLnN0YXR1cyA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX2ZpcmVFdmVudChcImNvbm5lY3Rpb24tY2hhbmdlZFwiKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIF9jYXN0U3RhdGVDaGFuZ2VkKGV2OiBDYXN0U3RhdGVFdmVudERhdGEpIHtcbiAgICBpZiAoX19ERVZfXykge1xuICAgICAgY29uc29sZS5sb2coXCJDYXN0IHN0YXRlIGNoYW5nZWRcIiwgZXYuY2FzdFN0YXRlKTtcbiAgICB9XG4gICAgdGhpcy5fZmlyZUV2ZW50KFwic3RhdGUtY2hhbmdlZFwiKTtcbiAgfVxuXG4gIHByaXZhdGUgX2F0dGFjaE1lc3NhZ2VMaXN0ZW5lcigpIHtcbiAgICBjb25zdCBzZXNzaW9uID0gdGhpcy5jYXN0U2Vzc2lvbjtcbiAgICBzZXNzaW9uLmFkZE1lc3NhZ2VMaXN0ZW5lcihDQVNUX05TLCAoX25zLCBtc2cpID0+XG4gICAgICB0aGlzLl9yZWNlaXZlTWVzc2FnZShKU09OLnBhcnNlKG1zZykpXG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0Q2FzdE1hbmFnZXIgPSAoYXV0aD86IEF1dGgpID0+IHtcbiAgaWYgKCFtYW5hZ2VyUHJvbSkge1xuICAgIG1hbmFnZXJQcm9tID0gY2FzdEFwaUF2YWlsYWJsZSgpLnRoZW4oKGlzQXZhaWxhYmxlKSA9PiB7XG4gICAgICBpZiAoIWlzQXZhaWxhYmxlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIENhc3QgQVBJIGF2YWlsYWJsZVwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBuZXcgQ2FzdE1hbmFnZXIoYXV0aCk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIG1hbmFnZXJQcm9tO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/cast/cast_manager.ts\n");

/***/ }),

/***/ "./src/common/dom/load_resource.ts":
/*!*****************************************!*\
  !*** ./src/common/dom/load_resource.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loadCSS\": () => (/* binding */ loadCSS),\n/* harmony export */   \"loadJS\": () => (/* binding */ loadJS),\n/* harmony export */   \"loadImg\": () => (/* binding */ loadImg),\n/* harmony export */   \"loadModule\": () => (/* binding */ loadModule)\n/* harmony export */ });\n// Load a resource and get a promise when loading done.\n// From: https://davidwalsh.name/javascript-loader\nconst _load = (tag, url, type) => // This promise will be used by Promise.all to determine success or failure\nnew Promise((resolve, reject) => {\n  const element = document.createElement(tag);\n  let attr = \"src\";\n  let parent = \"body\"; // Important success and error for the promise\n\n  element.onload = () => resolve(url);\n\n  element.onerror = () => reject(url); // Need to set different attributes depending on tag type\n\n\n  switch (tag) {\n    case \"script\":\n      element.async = true;\n\n      if (type) {\n        element.type = type;\n      }\n\n      break;\n\n    case \"link\":\n      element.type = \"text/css\";\n      element.rel = \"stylesheet\";\n      attr = \"href\";\n      parent = \"head\";\n  } // Inject into document to kick off loading\n\n\n  element[attr] = url;\n  document[parent].appendChild(element);\n});\n\nconst loadCSS = url => _load(\"link\", url);\nconst loadJS = url => _load(\"script\", url);\nconst loadImg = url => _load(\"img\", url);\nconst loadModule = url => _load(\"script\", url, \"module\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbW9uL2RvbS9sb2FkX3Jlc291cmNlLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTs7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWEE7OztBQWVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vc3JjL2NvbW1vbi9kb20vbG9hZF9yZXNvdXJjZS50cz84ZWNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIExvYWQgYSByZXNvdXJjZSBhbmQgZ2V0IGEgcHJvbWlzZSB3aGVuIGxvYWRpbmcgZG9uZS5cbi8vIEZyb206IGh0dHBzOi8vZGF2aWR3YWxzaC5uYW1lL2phdmFzY3JpcHQtbG9hZGVyXG5cbmNvbnN0IF9sb2FkID0gKHRhZzogXCJsaW5rXCIgfCBcInNjcmlwdFwiIHwgXCJpbWdcIiwgdXJsOiBzdHJpbmcsIHR5cGU/OiBcIm1vZHVsZVwiKSA9PlxuICAvLyBUaGlzIHByb21pc2Ugd2lsbCBiZSB1c2VkIGJ5IFByb21pc2UuYWxsIHRvIGRldGVybWluZSBzdWNjZXNzIG9yIGZhaWx1cmVcbiAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gICAgbGV0IGF0dHIgPSBcInNyY1wiO1xuICAgIGxldCBwYXJlbnQgPSBcImJvZHlcIjtcblxuICAgIC8vIEltcG9ydGFudCBzdWNjZXNzIGFuZCBlcnJvciBmb3IgdGhlIHByb21pc2VcbiAgICBlbGVtZW50Lm9ubG9hZCA9ICgpID0+IHJlc29sdmUodXJsKTtcbiAgICBlbGVtZW50Lm9uZXJyb3IgPSAoKSA9PiByZWplY3QodXJsKTtcblxuICAgIC8vIE5lZWQgdG8gc2V0IGRpZmZlcmVudCBhdHRyaWJ1dGVzIGRlcGVuZGluZyBvbiB0YWcgdHlwZVxuICAgIHN3aXRjaCAodGFnKSB7XG4gICAgICBjYXNlIFwic2NyaXB0XCI6XG4gICAgICAgIChlbGVtZW50IGFzIEhUTUxTY3JpcHRFbGVtZW50KS5hc3luYyA9IHRydWU7XG4gICAgICAgIGlmICh0eXBlKSB7XG4gICAgICAgICAgKGVsZW1lbnQgYXMgSFRNTFNjcmlwdEVsZW1lbnQpLnR5cGUgPSB0eXBlO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImxpbmtcIjpcbiAgICAgICAgKGVsZW1lbnQgYXMgSFRNTExpbmtFbGVtZW50KS50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuICAgICAgICAoZWxlbWVudCBhcyBIVE1MTGlua0VsZW1lbnQpLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuICAgICAgICBhdHRyID0gXCJocmVmXCI7XG4gICAgICAgIHBhcmVudCA9IFwiaGVhZFwiO1xuICAgIH1cblxuICAgIC8vIEluamVjdCBpbnRvIGRvY3VtZW50IHRvIGtpY2sgb2ZmIGxvYWRpbmdcbiAgICBlbGVtZW50W2F0dHJdID0gdXJsO1xuICAgIGRvY3VtZW50W3BhcmVudF0uYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG4gIH0pO1xuZXhwb3J0IGNvbnN0IGxvYWRDU1MgPSAodXJsOiBzdHJpbmcpID0+IF9sb2FkKFwibGlua1wiLCB1cmwpO1xuZXhwb3J0IGNvbnN0IGxvYWRKUyA9ICh1cmw6IHN0cmluZykgPT4gX2xvYWQoXCJzY3JpcHRcIiwgdXJsKTtcbmV4cG9ydCBjb25zdCBsb2FkSW1nID0gKHVybDogc3RyaW5nKSA9PiBfbG9hZChcImltZ1wiLCB1cmwpO1xuZXhwb3J0IGNvbnN0IGxvYWRNb2R1bGUgPSAodXJsOiBzdHJpbmcpID0+IF9sb2FkKFwic2NyaXB0XCIsIHVybCwgXCJtb2R1bGVcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/common/dom/load_resource.ts\n");

/***/ })

}]);