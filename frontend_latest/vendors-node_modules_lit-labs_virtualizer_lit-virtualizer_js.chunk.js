"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["vendors-node_modules_lit-labs_virtualizer_lit-virtualizer_js"],{

/***/ "./node_modules/@lit-labs/virtualizer/node_modules/tslib/tslib.es6.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/node_modules/tslib/tslib.es6.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__extends\": () => (/* binding */ __extends),\n/* harmony export */   \"__assign\": () => (/* binding */ __assign),\n/* harmony export */   \"__rest\": () => (/* binding */ __rest),\n/* harmony export */   \"__decorate\": () => (/* binding */ __decorate),\n/* harmony export */   \"__param\": () => (/* binding */ __param),\n/* harmony export */   \"__metadata\": () => (/* binding */ __metadata),\n/* harmony export */   \"__awaiter\": () => (/* binding */ __awaiter),\n/* harmony export */   \"__generator\": () => (/* binding */ __generator),\n/* harmony export */   \"__exportStar\": () => (/* binding */ __exportStar),\n/* harmony export */   \"__values\": () => (/* binding */ __values),\n/* harmony export */   \"__read\": () => (/* binding */ __read),\n/* harmony export */   \"__spread\": () => (/* binding */ __spread),\n/* harmony export */   \"__spreadArrays\": () => (/* binding */ __spreadArrays),\n/* harmony export */   \"__await\": () => (/* binding */ __await),\n/* harmony export */   \"__asyncGenerator\": () => (/* binding */ __asyncGenerator),\n/* harmony export */   \"__asyncDelegator\": () => (/* binding */ __asyncDelegator),\n/* harmony export */   \"__asyncValues\": () => (/* binding */ __asyncValues),\n/* harmony export */   \"__makeTemplateObject\": () => (/* binding */ __makeTemplateObject),\n/* harmony export */   \"__importStar\": () => (/* binding */ __importStar),\n/* harmony export */   \"__importDefault\": () => (/* binding */ __importDefault)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n}\nfunction __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nfunction __exportStar(m, exports) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n;\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n      i,\n      q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\nfunction __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n, f) {\n    i[n] = o[n] ? function (v) {\n      return (p = !p) ? {\n        value: __await(o[n](v)),\n        done: n === \"return\"\n      } : f ? f(v) : v;\n    } : f;\n  }\n}\nfunction __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n}\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n;\nfunction __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result.default = mod;\n  return result;\n}\nfunction __importDefault(mod) {\n  return mod && mod.__esModule ? mod : {\n    default: mod\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/Virtualizer.js":
/*!***********************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/Virtualizer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"virtualizerRef\": () => (/* binding */ virtualizerRef),\n/* harmony export */   \"RangeChangedEvent\": () => (/* binding */ RangeChangedEvent),\n/* harmony export */   \"VisibilityChangedEvent\": () => (/* binding */ VisibilityChangedEvent),\n/* harmony export */   \"Virtualizer\": () => (/* binding */ Virtualizer)\n/* harmony export */ });\n/* harmony import */ var _polyfillLoaders_ResizeObserver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polyfillLoaders/ResizeObserver.js */ \"./node_modules/@lit-labs/virtualizer/polyfillLoaders/ResizeObserver.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst virtualizerRef = Symbol('virtualizerRef');\nconst SIZER_ATTRIBUTE = 'virtualizer-sizer';\nclass RangeChangedEvent extends Event {\n  constructor(range) {\n    super(RangeChangedEvent.eventName, {\n      bubbles: true\n    });\n    this.first = range.first;\n    this.last = range.last;\n  }\n\n}\nRangeChangedEvent.eventName = 'rangeChanged';\nclass VisibilityChangedEvent extends Event {\n  constructor(range) {\n    super(VisibilityChangedEvent.eventName, {\n      bubbles: true\n    });\n    this.first = range.first;\n    this.last = range.last;\n  }\n\n}\nVisibilityChangedEvent.eventName = 'visibilityChanged';\n/**\n * Provides virtual scrolling boilerplate.\n *\n * Extensions of this class must set hostElement, layout, and scrollTarget.\n *\n * Extensions of this class must also override VirtualRepeater's DOM\n * manipulation methods.\n */\n\nclass Virtualizer {\n  constructor(config) {\n    this._benchmarkStart = null;\n    /**\n     * Whether the layout should receive an updated viewport size on the next\n     * render.\n     */\n    // private _needsUpdateView: boolean = false;\n\n    this._layout = null;\n    this._clippingAncestors = [];\n    /**\n     * Layout provides these values, we set them on _render().\n     * TODO @straversi: Can we find an XOR type, usable for the key here?\n     */\n\n    this._scrollSize = null;\n    /**\n     * Difference between scroll target's current and required scroll offsets.\n     * Provided by layout.\n     */\n\n    this._scrollError = null;\n    /**\n     * A list of the positions (top, left) of the children in the current range.\n     */\n\n    this._childrenPos = null; // TODO: (graynorton): type\n\n    this._childMeasurements = null;\n    this._toBeMeasured = new Map();\n    this._rangeChanged = true;\n    this._itemsChanged = true;\n    this._visibilityChanged = true;\n    this._isScroller = false;\n    this._sizer = null;\n    /**\n     * Resize observer attached to hostElement.\n     */\n\n    this._hostElementRO = null;\n    /**\n     * Resize observer attached to children.\n     */\n\n    this._childrenRO = null;\n    this._mutationObserver = null;\n    this._mutationPromise = null;\n    this._mutationPromiseResolver = null;\n    this._mutationsObserved = false;\n    this._scrollEventListeners = [];\n    this._scrollEventListenerOptions = {\n      passive: true\n    }; // TODO (graynorton): Rethink, per longer comment below\n\n    this._loadListener = this._childLoaded.bind(this);\n    /**\n     * Index and position of item to scroll to.\n     */\n\n    this._scrollToIndex = null;\n    /**\n     * Items to render. Set by items.\n     */\n\n    this._items = [];\n    /**\n     * Index of the first child in the range, not necessarily the first visible child.\n     * TODO @straversi: Consider renaming these.\n     */\n\n    this._first = -1;\n    /**\n     * Index of the last child in the range.\n     */\n\n    this._last = -1;\n    /**\n     * Index of the first item intersecting the viewport.\n     */\n\n    this._firstVisible = -1;\n    /**\n     * Index of the last item intersecting the viewport.\n     */\n\n    this._lastVisible = -1;\n    this._scheduled = new WeakSet();\n    /**\n     * Invoked at the end of each render cycle: children in the range are\n     * measured, and their dimensions passed to this callback. Use it to layout\n     * children as needed.\n     */\n\n    this._measureCallback = null;\n    this._measureChildOverride = null;\n\n    if (!config) {\n      throw new Error('Virtualizer constructor requires a configuration object');\n    }\n\n    if (config.hostElement) {\n      this._init(config);\n    } else {\n      throw new Error('Virtualizer configuration requires the \"hostElement\" property');\n    }\n  }\n\n  set items(items) {\n    if (Array.isArray(items) && items !== this._items) {\n      this._itemsChanged = true;\n      this._items = items;\n\n      this._schedule(this._updateLayout);\n    }\n  }\n\n  _init(config) {\n    this._isScroller = !!config.scroller;\n\n    this._initHostElement(config);\n\n    this._initLayout(config);\n  }\n\n  async _initObservers() {\n    this._mutationObserver = new MutationObserver(this._observeMutations.bind(this));\n    const ResizeObserver = await (0,_polyfillLoaders_ResizeObserver_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    this._hostElementRO = new ResizeObserver(() => this._hostElementSizeChanged());\n    this._childrenRO = new ResizeObserver(this._childrenSizeChanged.bind(this));\n  }\n\n  async _initLayout(config) {\n    if (config.layout) {\n      this.layout = config.layout;\n    } else {\n      this.layout = (await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lit-labs_virtualizer_layouts_shared_BaseLayout_js\"), __webpack_require__.e(\"vendors-node_modules_lit-labs_virtualizer_layouts_flow_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./layouts/flow.js */ \"./node_modules/@lit-labs/virtualizer/layouts/flow.js\"))).FlowLayout;\n    }\n  }\n\n  _initHostElement(config) {\n    const hostElement = this._hostElement = config.hostElement;\n\n    this._applyVirtualizerStyles();\n\n    hostElement[virtualizerRef] = this;\n  }\n\n  async connected() {\n    await this._initObservers();\n    const includeSelf = this._isScroller;\n    this._clippingAncestors = getClippingAncestors(this._hostElement, includeSelf);\n\n    this._schedule(this._updateLayout);\n\n    this._observeAndListen();\n  }\n\n  _observeAndListen() {\n    this._mutationObserver.observe(this._hostElement, {\n      childList: true\n    });\n\n    this._mutationPromise = new Promise(resolve => this._mutationPromiseResolver = resolve);\n\n    this._hostElementRO.observe(this._hostElement);\n\n    this._scrollEventListeners.push(window);\n\n    window.addEventListener('scroll', this, this._scrollEventListenerOptions);\n\n    this._clippingAncestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', this, this._scrollEventListenerOptions);\n\n      this._scrollEventListeners.push(ancestor);\n\n      this._hostElementRO.observe(ancestor);\n    });\n\n    this._children.forEach(child => this._childrenRO.observe(child));\n\n    this._scrollEventListeners.forEach(target => target.addEventListener('scroll', this, this._scrollEventListenerOptions));\n  }\n\n  disconnected() {\n    this._scrollEventListeners.forEach(target => target.removeEventListener('scroll', this, this._scrollEventListenerOptions));\n\n    this._scrollEventListeners = [];\n    this._clippingAncestors = [];\n\n    this._mutationObserver.disconnect();\n\n    this._hostElementRO.disconnect();\n\n    this._childrenRO.disconnect();\n  }\n\n  _applyVirtualizerStyles() {\n    const hostElement = this._hostElement; // Would rather set these CSS properties on the host using Shadow Root\n    // style scoping (and falling back to a global stylesheet where native\n    // Shadow DOM is not available), but this Mobile Safari bug is preventing\n    // that from working: https://bugs.webkit.org/show_bug.cgi?id=226195\n\n    const style = hostElement.style;\n    style.display = style.display || 'block';\n    style.position = style.position || 'relative';\n    style.contain = style.contain || 'strict';\n\n    if (this._isScroller) {\n      style.overflow = style.overflow || 'auto';\n      style.minHeight = style.minHeight || '150px';\n    }\n  }\n\n  _getSizer() {\n    const hostElement = this._hostElement;\n\n    if (!this._sizer) {\n      // Use a pre-existing sizer element if provided (for better integration\n      // with vDOM renderers)\n      let sizer = hostElement.querySelector(`[${SIZER_ATTRIBUTE}]`);\n\n      if (!sizer) {\n        sizer = document.createElement('div');\n        sizer.setAttribute(SIZER_ATTRIBUTE, '');\n        hostElement.appendChild(sizer);\n      } // When the scrollHeight is large, the height of this element might be\n      // ignored. Setting content and font-size ensures the element has a size.\n\n\n      Object.assign(sizer.style, {\n        position: 'absolute',\n        margin: '-2px 0 0 0',\n        padding: 0,\n        visibility: 'hidden',\n        fontSize: '2px'\n      });\n      sizer.innerHTML = '&nbsp;';\n      sizer.setAttribute(SIZER_ATTRIBUTE, '');\n      this._sizer = sizer;\n    }\n\n    return this._sizer;\n  } // This will always actually return a layout instance,\n  // but TypeScript wants the getter and setter types to be the same\n\n\n  get layout() {\n    return this._layout;\n  } // TODO (graynorton): Consider not allowing dynamic layout changes and\n  // instead just creating a new Virtualizer instance when a layout\n  // change is desired. Might simplify quite a bit.\n\n\n  set layout(layout) {\n    if (this._layout === layout) {\n      return;\n    }\n\n    let _layout = null;\n    let _config = {};\n\n    if (typeof layout === 'object') {\n      if (layout.type !== undefined) {\n        _layout = layout.type; // delete (layout as LayoutSpecifier).type;\n      }\n\n      _config = layout;\n    } else {\n      _layout = layout;\n    }\n\n    if (typeof _layout === 'function') {\n      if (this._layout instanceof _layout) {\n        if (_config) {\n          this._layout.config = _config;\n        }\n\n        return;\n      } else {\n        _layout = new _layout(_config);\n      }\n    }\n\n    if (this._layout) {\n      this._measureCallback = null;\n      this._measureChildOverride = null;\n\n      this._layout.removeEventListener('scrollsizechange', this);\n\n      this._layout.removeEventListener('scrollerrorchange', this);\n\n      this._layout.removeEventListener('itempositionchange', this);\n\n      this._layout.removeEventListener('rangechange', this);\n\n      this._sizeHostElement(undefined);\n\n      this._hostElement.removeEventListener('load', this._loadListener, true);\n    }\n\n    this._layout = _layout;\n\n    if (this._layout) {\n      if (this._layout.measureChildren && typeof this._layout.updateItemSizes === 'function') {\n        if (typeof this._layout.measureChildren === 'function') {\n          this._measureChildOverride = this._layout.measureChildren;\n        }\n\n        this._measureCallback = this._layout.updateItemSizes.bind(this._layout);\n      }\n\n      this._layout.addEventListener('scrollsizechange', this);\n\n      this._layout.addEventListener('scrollerrorchange', this);\n\n      this._layout.addEventListener('itempositionchange', this);\n\n      this._layout.addEventListener('rangechange', this);\n\n      if (this._layout.listenForChildLoadEvents) {\n        this._hostElement.addEventListener('load', this._loadListener, true);\n      }\n\n      this._schedule(this._updateLayout);\n    }\n  } // TODO (graynorton): Rework benchmarking so that it has no API and\n  // instead is always on except in production builds\n\n\n  startBenchmarking() {\n    if (this._benchmarkStart === null) {\n      this._benchmarkStart = window.performance.now();\n    }\n  }\n\n  stopBenchmarking() {\n    if (this._benchmarkStart !== null) {\n      const now = window.performance.now();\n      const timeElapsed = now - this._benchmarkStart;\n      const entries = performance.getEntriesByName('uv-virtualizing', 'measure');\n      const virtualizationTime = entries.filter(e => e.startTime >= this._benchmarkStart && e.startTime < now).reduce((t, m) => t + m.duration, 0);\n      this._benchmarkStart = null;\n      return {\n        timeElapsed,\n        virtualizationTime\n      };\n    }\n\n    return null;\n  }\n\n  _measureChildren() {\n    const mm = {};\n    const children = this._children;\n    const fn = this._measureChildOverride || this._measureChild;\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const idx = this._first + i;\n\n      if (this._itemsChanged || this._toBeMeasured.has(child)) {\n        mm[idx] = fn.call(this, child, this._items[idx]\n        /*as unknown as object*/\n        );\n      }\n    }\n\n    this._childMeasurements = mm;\n\n    this._schedule(this._updateLayout);\n\n    this._toBeMeasured.clear();\n  }\n  /**\n   * Returns the width, height, and margins of the given child.\n   */\n\n\n  _measureChild(element) {\n    // offsetWidth doesn't take transforms in consideration, so we use\n    // getBoundingClientRect which does.\n    const {\n      width,\n      height\n    } = element.getBoundingClientRect();\n    return Object.assign({\n      width,\n      height\n    }, getMargins(element));\n  }\n  /**\n   * Index and position of item to scroll to. The virtualizer will fix to that point\n   * until the user scrolls.\n   */\n\n\n  set scrollToIndex(newValue) {\n    this._scrollToIndex = newValue;\n\n    this._schedule(this._updateLayout);\n  }\n\n  async _schedule(method) {\n    if (!this._scheduled.has(method)) {\n      this._scheduled.add(method);\n\n      await Promise.resolve();\n\n      this._scheduled.delete(method);\n\n      method.call(this);\n    }\n  }\n\n  async _updateDOM() {\n    const {\n      _rangeChanged,\n      _itemsChanged\n    } = this;\n\n    if (this._visibilityChanged) {\n      this._notifyVisibility();\n\n      this._visibilityChanged = false;\n    }\n\n    if (_rangeChanged || _itemsChanged) {\n      this._notifyRange();\n\n      await this._mutationPromise;\n    }\n\n    this._children.forEach(child => this._childrenRO.observe(child));\n\n    this._positionChildren(this._childrenPos);\n\n    this._sizeHostElement(this._scrollSize);\n\n    if (this._scrollError) {\n      this._correctScrollError(this._scrollError);\n\n      this._scrollError = null;\n    }\n\n    if (this._benchmarkStart && 'mark' in window.performance) {\n      window.performance.mark('uv-end');\n    }\n  }\n\n  _updateLayout() {\n    if (this._layout) {\n      this._layout.totalItems = this._items.length;\n\n      if (this._scrollToIndex !== null) {\n        this._layout.scrollToIndex(this._scrollToIndex.index, this._scrollToIndex.position);\n\n        this._scrollToIndex = null;\n      }\n\n      this._updateView();\n\n      if (this._childMeasurements !== null) {\n        // If the layout has been changed, we may have measurements but no callback\n        if (this._measureCallback) {\n          this._measureCallback(this._childMeasurements);\n        }\n\n        this._childMeasurements = null;\n      }\n\n      this._layout.reflowIfNeeded(this._itemsChanged);\n\n      if (this._benchmarkStart && 'mark' in window.performance) {\n        window.performance.mark('uv-end');\n      }\n    }\n  }\n\n  _handleScrollEvent() {\n    if (this._benchmarkStart && 'mark' in window.performance) {\n      try {\n        window.performance.measure('uv-virtualizing', 'uv-start', 'uv-end');\n      } catch (e) {\n        console.warn('Error measuring performance data: ', e);\n      }\n\n      window.performance.mark('uv-start');\n    }\n\n    this._schedule(this._updateLayout);\n  }\n\n  handleEvent(event) {\n    switch (event.type) {\n      case 'scroll':\n        if (event.currentTarget === window || this._clippingAncestors.includes(event.currentTarget)) {\n          this._handleScrollEvent();\n        }\n\n        break;\n\n      case 'scrollsizechange':\n        this._scrollSize = event.detail;\n\n        this._schedule(this._updateDOM);\n\n        break;\n\n      case 'scrollerrorchange':\n        this._scrollError = event.detail;\n\n        this._schedule(this._updateDOM);\n\n        break;\n\n      case 'itempositionchange':\n        this._childrenPos = event.detail;\n\n        this._schedule(this._updateDOM);\n\n        break;\n\n      case 'rangechange':\n        this._adjustRange(event.detail);\n\n        this._schedule(this._updateDOM);\n\n        break;\n\n      default:\n        console.warn('event not handled', event);\n    }\n  }\n\n  get _children() {\n    const arr = [];\n    let next = this._hostElement.firstElementChild;\n\n    while (next) {\n      if (!next.hasAttribute(SIZER_ATTRIBUTE)) {\n        arr.push(next);\n      }\n\n      next = next.nextElementSibling;\n    }\n\n    return arr;\n  }\n\n  _updateView() {\n    const hostElement = this._hostElement;\n    const layout = this._layout;\n    let top, left, bottom, right, scrollTop, scrollLeft;\n    const hostElementBounds = hostElement.getBoundingClientRect();\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n\n    for (let ancestor of this._clippingAncestors) {\n      const ancestorBounds = ancestor.getBoundingClientRect();\n      top = Math.max(top, ancestorBounds.top);\n      left = Math.max(left, ancestorBounds.left);\n      bottom = Math.min(bottom, ancestorBounds.bottom);\n      right = Math.min(right, ancestorBounds.right);\n    }\n\n    scrollTop = top - hostElementBounds.top + hostElement.scrollTop;\n    scrollLeft = left - hostElementBounds.left + hostElement.scrollLeft;\n    const height = Math.max(1, bottom - top);\n    const width = Math.max(1, right - left);\n    layout.viewportSize = {\n      width,\n      height\n    };\n    layout.viewportScroll = {\n      top: scrollTop,\n      left: scrollLeft\n    };\n  }\n  /**\n   * Styles the host element so that its size reflects the\n   * total size of all items.\n   */\n\n\n  _sizeHostElement(size) {\n    // Some browsers seem to crap out if the host element gets larger than\n    // a certain size, so we clamp it here (this value based on ad hoc\n    // testing in Chrome / Safari / Firefox Mac)\n    const max = 8200000;\n    const h = size && size.width ? Math.min(max, size.width) : 0;\n    const v = size && size.height ? Math.min(max, size.height) : 0;\n\n    if (this._isScroller) {\n      this._getSizer().style.transform = `translate(${h}px, ${v}px)`;\n    } else {\n      const style = this._hostElement.style;\n      style.minWidth = h ? `${h}px` : '100%';\n      style.minHeight = v ? `${v}px` : '100%';\n    }\n  }\n  /**\n   * Sets the top and left transform style of the children from the values in\n   * pos.\n   */\n\n\n  _positionChildren(pos) {\n    if (pos) {\n      const children = this._children;\n      Object.keys(pos).forEach(key => {\n        const idx = key - this._first;\n        const child = children[idx];\n\n        if (child) {\n          const {\n            top,\n            left,\n            width,\n            height,\n            xOffset,\n            yOffset\n          } = pos[key];\n          child.style.position = 'absolute';\n          child.style.boxSizing = 'border-box';\n          child.style.transform = `translate(${left}px, ${top}px)`;\n\n          if (width !== undefined) {\n            child.style.width = width + 'px';\n          }\n\n          if (height !== undefined) {\n            child.style.height = height + 'px';\n          }\n\n          child.style.left = xOffset === undefined ? null : xOffset + 'px';\n          child.style.top = yOffset === undefined ? null : yOffset + 'px';\n        }\n      });\n    }\n  }\n\n  async _adjustRange(range) {\n    const {\n      _first,\n      _last,\n      _firstVisible,\n      _lastVisible\n    } = this;\n    this._first = range.first;\n    this._last = range.last;\n    this._firstVisible = range.firstVisible;\n    this._lastVisible = range.lastVisible;\n    this._rangeChanged = this._rangeChanged || this._first !== _first || this._last !== _last;\n    this._visibilityChanged = this._visibilityChanged || this._firstVisible !== _firstVisible || this._lastVisible !== _lastVisible;\n  }\n\n  _correctScrollError(err) {\n    const target = this._clippingAncestors[0];\n\n    if (target) {\n      target.scrollTop -= err.top;\n      target.scrollLeft -= err.left;\n    } else {\n      window.scroll(window.pageXOffset - err.left, window.pageYOffset - err.top);\n    }\n  }\n  /**\n   * Emits a rangechange event with the current first, last, firstVisible, and\n   * lastVisible.\n   */\n\n\n  _notifyRange() {\n    this._hostElement.dispatchEvent(new RangeChangedEvent({\n      first: this._first,\n      last: this._last\n    }));\n  }\n\n  _notifyVisibility() {\n    this._hostElement.dispatchEvent(new VisibilityChangedEvent({\n      first: this._firstVisible,\n      last: this._lastVisible\n    }));\n  }\n  /**\n   * Render and update the view at the next opportunity with the given\n   * hostElement size.\n   */\n\n\n  _hostElementSizeChanged() {\n    this._schedule(this._updateLayout);\n  }\n\n  async _observeMutations() {\n    if (!this._mutationsObserved) {\n      this._mutationsObserved = true;\n\n      this._mutationPromiseResolver();\n\n      this._mutationPromise = new Promise(resolve => this._mutationPromiseResolver = resolve);\n      this._mutationsObserved = false;\n    }\n  } // TODO (graynorton): Rethink how this works. Probably child loading is too specific\n  // to have dedicated support for; might want some more generic lifecycle hooks for\n  // layouts to use. Possibly handle measurement this way, too, or maybe that remains\n  // a first-class feature?\n\n\n  _childLoaded() {// this.requestRemeasure();\n  } // This is the callback for the ResizeObserver that watches the\n  // virtualizer's children. We land here at the end of every virtualizer\n  // update cycle that results in changes to physical items, and we also\n  // end up here if one or more children change size independently of\n  // the virtualizer update cycle.\n\n\n  _childrenSizeChanged(changes) {\n    // Only measure if the layout requires it\n    if (this._layout.measureChildren) {\n      for (const change of changes) {\n        this._toBeMeasured.set(change.target, change.contentRect);\n      }\n\n      this._measureChildren();\n    } // If this is the end of an update cycle, we need to reset some\n    // internal state. This should be a harmless no-op if we're handling\n    // an out-of-cycle ResizeObserver callback, so we don't need to\n    // distinguish between the two cases.\n\n\n    this._itemsChanged = false;\n    this._rangeChanged = false;\n  }\n\n}\n\nfunction getMargins(el) {\n  const style = window.getComputedStyle(el);\n  return {\n    marginTop: getMarginValue(style.marginTop),\n    marginRight: getMarginValue(style.marginRight),\n    marginBottom: getMarginValue(style.marginBottom),\n    marginLeft: getMarginValue(style.marginLeft)\n  };\n}\n\nfunction getMarginValue(value) {\n  const float = value ? parseFloat(value) : NaN;\n  return Number.isNaN(float) ? 0 : float;\n} // TODO (graynorton): Deal with iframes?\n\n\nfunction getParentElement(el) {\n  if (el.parentElement !== null) {\n    return el.parentElement;\n  }\n\n  const parentNode = el.parentNode;\n\n  if (parentNode && parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    return parentNode.host || null;\n  }\n\n  return null;\n}\n\nfunction getElementAncestors(el, includeSelf = false) {\n  const ancestors = [];\n  let parent = includeSelf ? el : getParentElement(el);\n\n  while (parent !== null) {\n    ancestors.push(parent);\n    parent = getParentElement(parent);\n  }\n\n  return ancestors;\n}\n\nfunction getClippingAncestors(el, includeSelf = false) {\n  return getElementAncestors(el, includeSelf).filter(a => getComputedStyle(a).overflow !== 'visible');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/Virtualizer.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/lit-virtualizer.js":
/*!***************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/lit-virtualizer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LitVirtualizer\": () => (/* binding */ LitVirtualizer)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/@lit-labs/virtualizer/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/decorators/custom-element.js */ \"./node_modules/lit/decorators/custom-element.js\");\n/* harmony import */ var lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit/decorators/property.js */ \"./node_modules/lit/decorators/property.js\");\n/* harmony import */ var lit_decorators_state_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lit/decorators/state.js */ \"./node_modules/lit/decorators/state.js\");\n/* harmony import */ var lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lit/directives/repeat.js */ \"./node_modules/lit/directives/repeat.js\");\n/* harmony import */ var _Virtualizer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Virtualizer.js */ \"./node_modules/@lit-labs/virtualizer/Virtualizer.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\n\n\n\n\n\n\nconst defaultKeyFunction = item => item;\n\nconst defaultRenderItem = (item, idx) => lit__WEBPACK_IMPORTED_MODULE_1__.html`${idx}: ${JSON.stringify(item, null, 2)}`;\n/**\n * Import this module to declare the lit-virtualizer custom element.\n */\n\n\nlet LitVirtualizer = class LitVirtualizer extends lit__WEBPACK_IMPORTED_MODULE_1__.LitElement {\n  constructor() {\n    super(...arguments);\n\n    this._renderItem = (item, idx) => defaultRenderItem(item, idx + this._first);\n\n    this._providedRenderItem = defaultRenderItem;\n    this.items = [];\n    this.scroller = false;\n    this.keyFunction = defaultKeyFunction;\n    this._first = 0;\n    this._last = -1;\n  }\n\n  set renderItem(fn) {\n    this._providedRenderItem = fn;\n\n    this._renderItem = (item, idx) => fn(item, idx + this._first);\n\n    this.requestUpdate();\n  }\n\n  get renderItem() {\n    return this._providedRenderItem;\n  }\n\n  set layout(layout) {\n    this._layout = layout;\n\n    if (layout && this._virtualizer) {\n      this._virtualizer.layout = layout;\n    }\n  }\n\n  get layout() {\n    return this[_Virtualizer_js__WEBPACK_IMPORTED_MODULE_6__.virtualizerRef].layout;\n  }\n  /**\n   * Scroll to the specified index, placing that item at the given position\n   * in the scroll view.\n   */\n\n\n  scrollToIndex(index, position = 'start') {\n    this._virtualizer.scrollToIndex = {\n      index,\n      position\n    };\n  }\n\n  updated() {\n    if (this._virtualizer) {\n      if (this._layout !== undefined) {\n        this._virtualizer.layout = this._layout;\n      }\n\n      this._virtualizer.items = this.items;\n    }\n  }\n\n  firstUpdated() {\n    const hostElement = this;\n    const layout = this._layout;\n    this._virtualizer = new _Virtualizer_js__WEBPACK_IMPORTED_MODULE_6__.Virtualizer({\n      hostElement,\n      layout,\n      scroller: this.scroller\n    });\n    hostElement.addEventListener('rangeChanged', e => {\n      e.stopPropagation();\n      this._first = e.first;\n      this._last = e.last;\n    });\n\n    this._virtualizer.connected();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (this._virtualizer) {\n      this._virtualizer.connected();\n    }\n  }\n\n  disconnectedCallback() {\n    if (this._virtualizer) {\n      this._virtualizer.disconnected();\n    }\n\n    super.disconnectedCallback();\n  }\n\n  createRenderRoot() {\n    return this;\n  }\n\n  render() {\n    const {\n      items,\n      _renderItem,\n      keyFunction\n    } = this;\n    const itemsToRender = [];\n\n    if (this._first >= 0 && this._last >= this._first) {\n      for (let i = this._first; i < this._last + 1; i++) {\n        itemsToRender.push(items[i]);\n      }\n    }\n\n    return (0,lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_5__.repeat)(itemsToRender, keyFunction || defaultKeyFunction, _renderItem);\n  }\n\n};\n\n(0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([(0,lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)()], LitVirtualizer.prototype, \"renderItem\", null);\n\n(0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([(0,lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n  attribute: false\n})], LitVirtualizer.prototype, \"items\", void 0);\n\n(0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([(0,lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n  reflect: true,\n  type: Boolean\n})], LitVirtualizer.prototype, \"scroller\", void 0);\n\n(0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([(0,lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)()], LitVirtualizer.prototype, \"keyFunction\", void 0);\n\n(0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([(0,lit_decorators_state_js__WEBPACK_IMPORTED_MODULE_4__.state)()], LitVirtualizer.prototype, \"_first\", void 0);\n\n(0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([(0,lit_decorators_state_js__WEBPACK_IMPORTED_MODULE_4__.state)()], LitVirtualizer.prototype, \"_last\", void 0);\n\n(0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([(0,lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.property)({\n  attribute: false\n})], LitVirtualizer.prototype, \"layout\", null);\n\nLitVirtualizer = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([(0,lit_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_2__.customElement)('lit-virtualizer')], LitVirtualizer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC1sYWJzL3ZpcnR1YWxpemVyL2xpdC12aXJ0dWFsaXplci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOzs7O0FBSUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUtBOztBQUNBO0FBRUE7O0FBRUE7OztBQUVBO0FBQUE7OztBQUNBOztBQUNBO0FBY0E7QUFHQTtBQUdBO0FBR0E7QUFHQTtBQTJFQTs7QUFuR0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTs7QUFzQkE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTs7O0FBR0E7OztBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQXRHQTs7QUFXQTs7QUFLQTtBQURBO0FBQUE7O0FBSUE7QUFEQTtBQUFBO0FBQUE7O0FBSUE7O0FBR0E7O0FBR0E7O0FBT0E7QUFEQTtBQUFBOztBQWxDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kL3NyYy9saXQtdmlydHVhbGl6ZXIudHM/YjI2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cblxuaW1wb3J0IHsgaHRtbCwgTGl0RWxlbWVudCwgVGVtcGxhdGVSZXN1bHQgfSBmcm9tICdsaXQnO1xuaW1wb3J0IHsgY3VzdG9tRWxlbWVudCB9IGZyb20gJ2xpdC9kZWNvcmF0b3JzL2N1c3RvbS1lbGVtZW50LmpzJztcbmltcG9ydCB7IHByb3BlcnR5IH0gZnJvbSAnbGl0L2RlY29yYXRvcnMvcHJvcGVydHkuanMnO1xuaW1wb3J0IHsgc3RhdGUgfSBmcm9tICdsaXQvZGVjb3JhdG9ycy9zdGF0ZS5qcyc7XG5pbXBvcnQgeyByZXBlYXQgfSBmcm9tICdsaXQvZGlyZWN0aXZlcy9yZXBlYXQuanMnO1xuaW1wb3J0IHsgVmlydHVhbGl6ZXIsIFZpcnR1YWxpemVySG9zdEVsZW1lbnQsIHZpcnR1YWxpemVyUmVmLCBSYW5nZUNoYW5nZWRFdmVudCB9IGZyb20gJy4vVmlydHVhbGl6ZXIuanMnO1xuaW1wb3J0IHsgTGF5b3V0U3BlY2lmaWVyLCBMYXlvdXQsIExheW91dENvbnN0cnVjdG9yIH0gZnJvbSAnLi9sYXlvdXRzL3NoYXJlZC9MYXlvdXQuanMnO1xuXG5cbnR5cGUgUmVuZGVySXRlbUZ1bmN0aW9uID0gKChpdGVtOiBhbnksIGluZGV4OiBudW1iZXIpID0+IFRlbXBsYXRlUmVzdWx0KVxuY29uc3QgZGVmYXVsdEtleUZ1bmN0aW9uID0gKGl0ZW06IGFueSkgPT4gaXRlbTtcbmNvbnN0IGRlZmF1bHRSZW5kZXJJdGVtOiBSZW5kZXJJdGVtRnVuY3Rpb24gPSAoaXRlbTogYW55LCBpZHg6IG51bWJlcikgPT4gaHRtbGAke2lkeH06ICR7SlNPTi5zdHJpbmdpZnkoaXRlbSwgbnVsbCwgMil9YDtcblxuLyoqXG4gKiBJbXBvcnQgdGhpcyBtb2R1bGUgdG8gZGVjbGFyZSB0aGUgbGl0LXZpcnR1YWxpemVyIGN1c3RvbSBlbGVtZW50LlxuICovXG5AY3VzdG9tRWxlbWVudCgnbGl0LXZpcnR1YWxpemVyJylcbmV4cG9ydCBjbGFzcyBMaXRWaXJ0dWFsaXplciBleHRlbmRzIExpdEVsZW1lbnQge1xuICAgIHByaXZhdGUgX3JlbmRlckl0ZW06IFJlbmRlckl0ZW1GdW5jdGlvbiA9IChpdGVtLCBpZHgpID0+IGRlZmF1bHRSZW5kZXJJdGVtKGl0ZW0sIGlkeCArIHRoaXMuX2ZpcnN0KTtcbiAgICBwcml2YXRlIF9wcm92aWRlZFJlbmRlckl0ZW06IFJlbmRlckl0ZW1GdW5jdGlvbiA9IGRlZmF1bHRSZW5kZXJJdGVtO1xuXG4gICAgc2V0IHJlbmRlckl0ZW0oZm46IFJlbmRlckl0ZW1GdW5jdGlvbikge1xuICAgICAgICB0aGlzLl9wcm92aWRlZFJlbmRlckl0ZW0gPSBmbjtcbiAgICAgICAgdGhpcy5fcmVuZGVySXRlbSA9IChpdGVtLCBpZHgpID0+IGZuKGl0ZW0sIGlkeCArIHRoaXMuX2ZpcnN0KTtcbiAgICAgICAgdGhpcy5yZXF1ZXN0VXBkYXRlKCk7XG4gICAgfVxuXG4gICAgQHByb3BlcnR5KClcbiAgICBnZXQgcmVuZGVySXRlbSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Byb3ZpZGVkUmVuZGVySXRlbTtcbiAgICB9XG5cbiAgICBAcHJvcGVydHkoe2F0dHJpYnV0ZTogZmFsc2V9KVxuICAgIGl0ZW1zOiBBcnJheTx1bmtub3duPiA9IFtdO1xuXG4gICAgQHByb3BlcnR5KHtyZWZsZWN0OiB0cnVlLCB0eXBlOiBCb29sZWFufSlcbiAgICBzY3JvbGxlciA9IGZhbHNlO1xuXG4gICAgQHByb3BlcnR5KClcbiAgICBrZXlGdW5jdGlvbjogKChpdGVtOnVua25vd24pID0+IHVua25vd24pIHwgdW5kZWZpbmVkID0gZGVmYXVsdEtleUZ1bmN0aW9uO1xuXG4gICAgQHN0YXRlKClcbiAgICBwcml2YXRlIF9maXJzdCA9IDA7XG5cbiAgICBAc3RhdGUoKVxuICAgIHByaXZhdGUgX2xhc3QgPSAtMTtcblxuICAgIHByaXZhdGUgX2xheW91dD86IExheW91dCB8IExheW91dENvbnN0cnVjdG9yIHwgTGF5b3V0U3BlY2lmaWVyIHwgbnVsbDtcblxuICAgIHByaXZhdGUgX3ZpcnR1YWxpemVyPzogVmlydHVhbGl6ZXI7XG4gIFxuICAgIEBwcm9wZXJ0eSh7YXR0cmlidXRlOmZhbHNlfSlcbiAgICBzZXQgbGF5b3V0KGxheW91dDogTGF5b3V0IHwgTGF5b3V0Q29uc3RydWN0b3IgfCBMYXlvdXRTcGVjaWZpZXIgfCBudWxsKSB7XG4gICAgICAgIHRoaXMuX2xheW91dCA9IGxheW91dDtcbiAgICAgICAgaWYgKGxheW91dCAmJiB0aGlzLl92aXJ0dWFsaXplcikge1xuICAgICAgICAgICAgdGhpcy5fdmlydHVhbGl6ZXIubGF5b3V0ID0gbGF5b3V0O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0IGxheW91dCgpOiBMYXlvdXQgfCBMYXlvdXRDb25zdHJ1Y3RvciB8IExheW91dFNwZWNpZmllciB8IG51bGwge1xuICAgICAgICByZXR1cm4gKHRoaXMgYXMgVmlydHVhbGl6ZXJIb3N0RWxlbWVudClbdmlydHVhbGl6ZXJSZWZdIS5sYXlvdXQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2Nyb2xsIHRvIHRoZSBzcGVjaWZpZWQgaW5kZXgsIHBsYWNpbmcgdGhhdCBpdGVtIGF0IHRoZSBnaXZlbiBwb3NpdGlvblxuICAgICAqIGluIHRoZSBzY3JvbGwgdmlldy5cbiAgICAgKi9cbiAgICBzY3JvbGxUb0luZGV4KGluZGV4OiBudW1iZXIsIHBvc2l0aW9uOiBzdHJpbmcgPSAnc3RhcnQnKSB7XG4gICAgICAgIHRoaXMuX3ZpcnR1YWxpemVyIS5zY3JvbGxUb0luZGV4ID0geyBpbmRleCwgcG9zaXRpb24gfTtcbiAgICB9XG5cbiAgICB1cGRhdGVkKCkge1xuICAgICAgICBpZiAodGhpcy5fdmlydHVhbGl6ZXIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9sYXlvdXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3ZpcnR1YWxpemVyIS5sYXlvdXQgPSB0aGlzLl9sYXlvdXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl92aXJ0dWFsaXplciEuaXRlbXMgPSB0aGlzLml0ZW1zO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZmlyc3RVcGRhdGVkKCkge1xuICAgICAgICBjb25zdCBob3N0RWxlbWVudCA9IHRoaXM7XG4gICAgICAgIGNvbnN0IGxheW91dCA9IHRoaXMuX2xheW91dDtcbiAgICAgICAgdGhpcy5fdmlydHVhbGl6ZXIgPSBuZXcgVmlydHVhbGl6ZXIoeyBob3N0RWxlbWVudCwgbGF5b3V0LCBzY3JvbGxlcjogdGhpcy5zY3JvbGxlciB9KTtcbiAgICAgICAgaG9zdEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncmFuZ2VDaGFuZ2VkJywgKGU6IFJhbmdlQ2hhbmdlZEV2ZW50KSA9PiB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgdGhpcy5fZmlyc3QgPSBlLmZpcnN0O1xuICAgICAgICAgICAgdGhpcy5fbGFzdCA9IGUubGFzdDtcbiAgICAgICAgfSk7ICAgIFxuICAgICAgICB0aGlzLl92aXJ0dWFsaXplciEuY29ubmVjdGVkKCk7XG4gICAgfVxuXG4gICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrKCk7XG4gICAgICAgIGlmICh0aGlzLl92aXJ0dWFsaXplcikge1xuICAgICAgICAgICAgdGhpcy5fdmlydHVhbGl6ZXIuY29ubmVjdGVkKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgICAgaWYgKHRoaXMuX3ZpcnR1YWxpemVyKSB7XG4gICAgICAgICAgICB0aGlzLl92aXJ0dWFsaXplci5kaXNjb25uZWN0ZWQoKTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlci5kaXNjb25uZWN0ZWRDYWxsYmFjaygpO1xuICAgIH1cblxuICAgIGNyZWF0ZVJlbmRlclJvb3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHJlbmRlcigpOiBUZW1wbGF0ZVJlc3VsdCB7XG4gICAgICAgIGNvbnN0IHsgaXRlbXMsIF9yZW5kZXJJdGVtLCBrZXlGdW5jdGlvbiB9ID0gdGhpcztcbiAgICAgICAgY29uc3QgaXRlbXNUb1JlbmRlciA9IFtdO1xuICAgICAgICBpZiAodGhpcy5fZmlyc3QgPj0gMCAmJiB0aGlzLl9sYXN0ID49IHRoaXMuX2ZpcnN0KSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gdGhpcy5fZmlyc3Q7IGkgPCB0aGlzLl9sYXN0ICsgMTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaXRlbXNUb1JlbmRlci5wdXNoKGl0ZW1zW2ldKTtcbiAgICAgICAgICAgIH0gICAgXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcGVhdChpdGVtc1RvUmVuZGVyLCBrZXlGdW5jdGlvbiB8fCBkZWZhdWx0S2V5RnVuY3Rpb24sIF9yZW5kZXJJdGVtKSBhcyBUZW1wbGF0ZVJlc3VsdDtcbiAgICB9XG59XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBpbnRlcmZhY2UgSFRNTEVsZW1lbnRUYWdOYW1lTWFwIHtcbiAgICAgICAgJ2xpdC12aXJ0dWFsaXplcic6IExpdFZpcnR1YWxpemVyO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/lit-virtualizer.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/polyfillLoaders/ResizeObserver.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/polyfillLoaders/ResizeObserver.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ResizeObserver)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nlet _RO;\n\nlet RO;\nasync function ResizeObserver() {\n  return RO || init();\n}\n\nasync function init() {\n  if (_RO) {\n    return (await _RO).default;\n  } else {\n    _RO = window.ResizeObserver;\n\n    try {\n      new _RO(function () {});\n    } catch (e) {\n      _RO = __webpack_require__.e(/*! import() */ \"vendors-node_modules_lit-labs_virtualizer_polyfills_resize-observer-polyfill_ResizeObserver_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../polyfills/resize-observer-polyfill/ResizeObserver.js */ \"./node_modules/@lit-labs/virtualizer/polyfills/resize-observer-polyfill/ResizeObserver.js\"));\n      _RO = (await _RO).default;\n    }\n\n    return RO = _RO;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC1sYWJzL3ZpcnR1YWxpemVyL3BvbHlmaWxsTG9hZGVycy9SZXNpemVPYnNlcnZlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7QUFJQTtBQUtBOztBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4uL3NyYy9wb2x5ZmlsbExvYWRlcnMvUmVzaXplT2JzZXJ2ZXIudHM/NDNlYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cblxuaW1wb3J0IHsgUmVzaXplT2JzZXJ2ZXJDb25zdHJ1Y3RvciB9IGZyb20gJy4uL3BvbHlmaWxscy9yZXNpemUtb2JzZXJ2ZXItcG9seWZpbGwvUmVzaXplT2JzZXJ2ZXIuanMnO1xudHlwZSBSZXNpemVPYnNlcnZlck1vZHVsZSA9IHR5cGVvZiBpbXBvcnQoJy4uL3BvbHlmaWxscy9yZXNpemUtb2JzZXJ2ZXItcG9seWZpbGwvUmVzaXplT2JzZXJ2ZXIuanMnKTtcblxubGV0IF9STzogUmVzaXplT2JzZXJ2ZXJNb2R1bGUgfCBSZXNpemVPYnNlcnZlckNvbnN0cnVjdG9yO1xubGV0IFJPOiBSZXNpemVPYnNlcnZlckNvbnN0cnVjdG9yO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBSZXNpemVPYnNlcnZlcigpIHtcbiAgICByZXR1cm4gUk8gfHwgaW5pdCgpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBpbml0KCkge1xuICAgIGlmIChfUk8pIHtcbiAgICAgICAgcmV0dXJuIChhd2FpdCBfUk8gYXMgUmVzaXplT2JzZXJ2ZXJNb2R1bGUpLmRlZmF1bHQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBfUk8gPSB3aW5kb3cuUmVzaXplT2JzZXJ2ZXI7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBuZXcgX1JPKGZ1bmN0aW9uKCkge30pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBfUk8gPSBpbXBvcnQoJy4uL3BvbHlmaWxscy9yZXNpemUtb2JzZXJ2ZXItcG9seWZpbGwvUmVzaXplT2JzZXJ2ZXIuanMnKSBhcyB1bmtub3duIGFzIFJlc2l6ZU9ic2VydmVyTW9kdWxlO1xuICAgICAgICAgICAgX1JPID0gKGF3YWl0IF9STykuZGVmYXVsdDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFJPID0gX1JPKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/polyfillLoaders/ResizeObserver.js\n");

/***/ }),

/***/ "./node_modules/lit/decorators/custom-element.js":
/*!*******************************************************!*\
  !*** ./node_modules/lit/decorators/custom-element.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "customElement": () => (/* reexport safe */ _lit_reactive_element_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_0__.customElement)
/* harmony export */ });
/* harmony import */ var _lit_reactive_element_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element/decorators/custom-element.js */ "./node_modules/@lit/reactive-element/development/decorators/custom-element.js");


/***/ }),

/***/ "./node_modules/lit/decorators/property.js":
/*!*************************************************!*\
  !*** ./node_modules/lit/decorators/property.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "property": () => (/* reexport safe */ _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_0__.property)
/* harmony export */ });
/* harmony import */ var _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element/decorators/property.js */ "./node_modules/@lit/reactive-element/development/decorators/property.js");


/***/ }),

/***/ "./node_modules/lit/decorators/state.js":
/*!**********************************************!*\
  !*** ./node_modules/lit/decorators/state.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "state": () => (/* reexport safe */ _lit_reactive_element_decorators_state_js__WEBPACK_IMPORTED_MODULE_0__.state)
/* harmony export */ });
/* harmony import */ var _lit_reactive_element_decorators_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element/decorators/state.js */ "./node_modules/@lit/reactive-element/development/decorators/state.js");


/***/ })

}]);