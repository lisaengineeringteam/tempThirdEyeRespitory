"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["vendors-node_modules_lit-labs_virtualizer_layouts_flow_js"],{

/***/ "./node_modules/@lit-labs/virtualizer/layouts/flow.js":
/*!************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/layouts/flow.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"flow\": () => (/* binding */ flow),\n/* harmony export */   \"FlowLayout\": () => (/* binding */ FlowLayout)\n/* harmony export */ });\n/* harmony import */ var _shared_SizeCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared/SizeCache.js */ \"./node_modules/@lit-labs/virtualizer/layouts/shared/SizeCache.js\");\n/* harmony import */ var _shared_BaseLayout_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared/BaseLayout.js */ \"./node_modules/@lit-labs/virtualizer/layouts/shared/BaseLayout.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\nconst flow = config => Object.assign({\n  type: FlowLayout\n}, config);\n\nfunction leadingMargin(direction) {\n  return direction === 'horizontal' ? 'marginLeft' : 'marginTop';\n}\n\nfunction trailingMargin(direction) {\n  return direction === 'horizontal' ? 'marginRight' : 'marginBottom';\n}\n\nfunction offset(direction) {\n  return direction === 'horizontal' ? 'xOffset' : 'yOffset';\n}\n\nfunction collapseMargins(a, b) {\n  const m = [a, b].sort();\n  return m[1] <= 0 ? Math.min(...m) : m[0] >= 0 ? Math.max(...m) : m[0] + m[1];\n}\n\nclass MetricsCache {\n  constructor() {\n    this._childSizeCache = new _shared_SizeCache_js__WEBPACK_IMPORTED_MODULE_0__.SizeCache();\n    this._marginSizeCache = new _shared_SizeCache_js__WEBPACK_IMPORTED_MODULE_0__.SizeCache();\n    this._metricsCache = new Map();\n  }\n\n  update(metrics, direction) {\n    var _a, _b;\n\n    const marginsToUpdate = new Set();\n    Object.keys(metrics).forEach(key => {\n      const k = Number(key);\n\n      this._metricsCache.set(k, metrics[k]);\n\n      this._childSizeCache.set(k, metrics[k][(0,_shared_BaseLayout_js__WEBPACK_IMPORTED_MODULE_1__.dim1)(direction)]);\n\n      marginsToUpdate.add(k);\n      marginsToUpdate.add(k + 1);\n    });\n\n    for (const k of marginsToUpdate) {\n      const a = ((_a = this._metricsCache.get(k)) === null || _a === void 0 ? void 0 : _a[leadingMargin(direction)]) || 0;\n      const b = ((_b = this._metricsCache.get(k - 1)) === null || _b === void 0 ? void 0 : _b[trailingMargin(direction)]) || 0;\n\n      this._marginSizeCache.set(k, collapseMargins(a, b));\n    }\n  }\n\n  get averageChildSize() {\n    return this._childSizeCache.averageSize;\n  }\n\n  get totalChildSize() {\n    return this._childSizeCache.totalSize;\n  }\n\n  get averageMarginSize() {\n    return this._marginSizeCache.averageSize;\n  }\n\n  get totalMarginSize() {\n    return this._marginSizeCache.totalSize;\n  }\n\n  getLeadingMarginValue(index, direction) {\n    var _a;\n\n    return ((_a = this._metricsCache.get(index)) === null || _a === void 0 ? void 0 : _a[leadingMargin(direction)]) || 0;\n  }\n\n  getChildSize(index) {\n    return this._childSizeCache.getSize(index);\n  }\n\n  getMarginSize(index) {\n    return this._marginSizeCache.getSize(index);\n  }\n\n  clear() {\n    this._childSizeCache.clear();\n\n    this._marginSizeCache.clear();\n\n    this._metricsCache.clear();\n  }\n\n}\n\nclass FlowLayout extends _shared_BaseLayout_js__WEBPACK_IMPORTED_MODULE_1__.BaseLayout {\n  constructor() {\n    super(...arguments);\n    /**\n     * Initial estimate of item size\n     */\n\n    this._itemSize = {\n      width: 100,\n      height: 100\n    };\n    /**\n     * Indices of children mapped to their (position and length) in the scrolling\n     * direction. Used to keep track of children that are in range.\n     */\n\n    this._physicalItems = new Map();\n    /**\n     * Used in tandem with _physicalItems to track children in range across\n     * reflows.\n     */\n\n    this._newPhysicalItems = new Map();\n    /**\n     * Width and height of children by their index.\n     */\n\n    this._metricsCache = new MetricsCache();\n    /**\n     * anchorIdx is the anchor around which we reflow. It is designed to allow\n     * jumping to any point of the scroll size. We choose it once and stick with\n     * it until stable. _first and _last are deduced around it.\n     */\n\n    this._anchorIdx = null;\n    /**\n     * Position in the scrolling direction of the anchor child.\n     */\n\n    this._anchorPos = null;\n    /**\n     * Whether all children in range were in range during the previous reflow.\n     */\n\n    this._stable = true;\n    /**\n     * Whether to remeasure children during the next reflow.\n     */\n\n    this._needsRemeasure = false;\n    this._measureChildren = true;\n    this._estimate = true;\n  } // protected _defaultConfig: BaseLayoutConfig = Object.assign({}, super._defaultConfig, {\n  // })\n  // constructor(config: Layout1dConfig) {\n  //   super(config);\n  // }\n\n\n  get measureChildren() {\n    return this._measureChildren;\n  }\n  /**\n   * Determine the average size of all children represented in the sizes\n   * argument.\n   */\n\n\n  updateItemSizes(sizes) {\n    this._metricsCache.update(sizes, this.direction); // if (this._nMeasured) {\n    // this._updateItemSize();\n\n\n    this._scheduleReflow(); // }\n\n  }\n  /**\n   * Set the average item size based on the total length and number of children\n   * in range.\n   */\n  // _updateItemSize() {\n  //   // Keep integer values.\n  //   this._itemSize[this._sizeDim] = this._metricsCache.averageChildSize;\n  // }\n\n\n  _getPhysicalItem(idx) {\n    var _a;\n\n    return (_a = this._newPhysicalItems.get(idx)) !== null && _a !== void 0 ? _a : this._physicalItems.get(idx);\n  }\n\n  _getSize(idx) {\n    const item = this._getPhysicalItem(idx);\n\n    return item && this._metricsCache.getChildSize(idx);\n  }\n\n  _getAverageSize() {\n    return this._metricsCache.averageChildSize || this._itemSize[this._sizeDim];\n  }\n  /**\n   * Returns the position in the scrolling direction of the item at idx.\n   * Estimates it if the item at idx is not in the DOM.\n   */\n\n\n  _getPosition(idx) {\n    var _a;\n\n    const item = this._getPhysicalItem(idx);\n\n    const {\n      averageMarginSize\n    } = this._metricsCache;\n    return idx === 0 ? (_a = this._metricsCache.getMarginSize(0)) !== null && _a !== void 0 ? _a : averageMarginSize : item ? item.pos : averageMarginSize + idx * (averageMarginSize + this._getAverageSize());\n  }\n\n  _calculateAnchor(lower, upper) {\n    if (lower <= 0) {\n      return 0;\n    }\n\n    if (upper > this._scrollSize - this._viewDim1) {\n      return this._totalItems - 1;\n    }\n\n    return Math.max(0, Math.min(this._totalItems - 1, Math.floor((lower + upper) / 2 / this._delta)));\n  }\n\n  _getAnchor(lower, upper) {\n    if (this._physicalItems.size === 0) {\n      return this._calculateAnchor(lower, upper);\n    }\n\n    if (this._first < 0) {\n      console.error('_getAnchor: negative _first');\n      return this._calculateAnchor(lower, upper);\n    }\n\n    if (this._last < 0) {\n      console.error('_getAnchor: negative _last');\n      return this._calculateAnchor(lower, upper);\n    }\n\n    const firstItem = this._getPhysicalItem(this._first),\n          lastItem = this._getPhysicalItem(this._last),\n          firstMin = firstItem.pos,\n          lastMin = lastItem.pos,\n          lastMax = lastMin + this._metricsCache.getChildSize(this._last);\n\n    if (lastMax < lower) {\n      // Window is entirely past physical items, calculate new anchor\n      return this._calculateAnchor(lower, upper);\n    }\n\n    if (firstMin > upper) {\n      // Window is entirely before physical items, calculate new anchor\n      return this._calculateAnchor(lower, upper);\n    } // Window contains a physical item\n    // Find one, starting with the one that was previously first visible\n\n\n    let candidateIdx = this._firstVisible - 1;\n    let cMax = -Infinity;\n\n    while (cMax < lower) {\n      const candidate = this._getPhysicalItem(++candidateIdx);\n\n      cMax = candidate.pos + this._metricsCache.getChildSize(candidateIdx);\n    }\n\n    return candidateIdx;\n  }\n  /**\n   * Updates _first and _last based on items that should be in the current\n   * viewed range.\n   */\n\n\n  _getActiveItems() {\n    if (this._viewDim1 === 0 || this._totalItems === 0) {\n      this._clearItems();\n    } else {\n      this._getItems();\n    }\n  }\n  /**\n   * Sets the range to empty.\n   */\n\n\n  _clearItems() {\n    this._first = -1;\n    this._last = -1;\n    this._physicalMin = 0;\n    this._physicalMax = 0;\n    const items = this._newPhysicalItems;\n    this._newPhysicalItems = this._physicalItems;\n\n    this._newPhysicalItems.clear();\n\n    this._physicalItems = items;\n    this._stable = true;\n  }\n  /*\n   * Updates _first and _last based on items that should be in the given range.\n   */\n\n\n  _getItems() {\n    var _a, _b;\n\n    const items = this._newPhysicalItems;\n    this._stable = true;\n    let lower, upper; // The anchorIdx is the anchor around which we reflow. It is designed to\n    // allow jumping to any point of the scroll size. We choose it once and\n    // stick with it until stable. first and last are deduced around it.\n    // If we have a scrollToIndex, we anchor on the given\n    // index and set the scroll position accordingly\n\n    if (this._scrollToIndex >= 0) {\n      this._anchorIdx = Math.min(this._scrollToIndex, this._totalItems - 1);\n      this._anchorPos = this._getPosition(this._anchorIdx);\n\n      this._scrollIfNeeded();\n    } // Determine the lower and upper bounds of the region to be\n    // rendered, relative to the viewport\n\n\n    lower = this._scrollPosition - this._overhang; //leadingOverhang;\n\n    upper = this._scrollPosition + this._viewDim1 + this._overhang; // trailingOverhang;\n\n    if (upper < 0 || lower > this._scrollSize) {\n      this._clearItems();\n\n      return;\n    } // If we are scrolling to a specific index or if we are doing another\n    // pass to stabilize a previously started reflow, we will already\n    // have an anchor. If not, establish an anchor now.\n\n\n    if (this._anchorIdx === null || this._anchorPos === null) {\n      this._anchorIdx = this._getAnchor(lower, upper);\n      this._anchorPos = this._getPosition(this._anchorIdx);\n    }\n\n    let anchorSize = this._getSize(this._anchorIdx);\n\n    if (anchorSize === undefined) {\n      this._stable = false;\n      anchorSize = this._getAverageSize();\n    }\n\n    let anchorLeadingMargin = (_a = this._metricsCache.getMarginSize(this._anchorIdx)) !== null && _a !== void 0 ? _a : this._metricsCache.averageMarginSize;\n    let anchorTrailingMargin = (_b = this._metricsCache.getMarginSize(this._anchorIdx + 1)) !== null && _b !== void 0 ? _b : this._metricsCache.averageMarginSize;\n\n    if (this._anchorIdx === 0) {\n      this._anchorPos = anchorLeadingMargin;\n    }\n\n    if (this._anchorIdx === this._totalItems - 1) {\n      this._anchorPos = this._scrollSize - anchorTrailingMargin - anchorSize;\n    } // Anchor might be outside bounds, so prefer correcting the error and keep\n    // that anchorIdx.\n\n\n    let anchorErr = 0;\n\n    if (this._anchorPos + anchorSize + anchorTrailingMargin < lower) {\n      anchorErr = lower - (this._anchorPos + anchorSize + anchorTrailingMargin);\n    }\n\n    if (this._anchorPos - anchorLeadingMargin > upper) {\n      anchorErr = upper - (this._anchorPos - anchorLeadingMargin);\n    }\n\n    if (anchorErr) {\n      this._scrollPosition -= anchorErr;\n      lower -= anchorErr;\n      upper -= anchorErr;\n      this._scrollError += anchorErr;\n    }\n\n    items.set(this._anchorIdx, {\n      pos: this._anchorPos,\n      size: anchorSize\n    });\n    this._first = this._last = this._anchorIdx;\n    this._physicalMin = this._anchorPos;\n    this._physicalMax = this._anchorPos + anchorSize;\n\n    while (this._physicalMin > lower && this._first > 0) {\n      let size = this._getSize(--this._first);\n\n      if (size === undefined) {\n        this._stable = false;\n        size = this._getAverageSize();\n      }\n\n      let margin = this._metricsCache.getMarginSize(this._first + 1);\n\n      if (margin === undefined) {\n        this._stable = false;\n        margin = this._metricsCache.averageMarginSize;\n      }\n\n      this._physicalMin -= size + margin;\n      const pos = this._physicalMin;\n      items.set(this._first, {\n        pos,\n        size\n      });\n\n      if (this._stable === false && this._estimate === false) {\n        break;\n      }\n    }\n\n    while (this._physicalMax < upper && this._last < this._totalItems - 1) {\n      let margin = this._metricsCache.getMarginSize(++this._last);\n\n      if (margin === undefined) {\n        this._stable = false;\n        margin = this._metricsCache.averageMarginSize;\n      }\n\n      let size = this._getSize(this._last);\n\n      if (size === undefined) {\n        this._stable = false;\n        size = this._getAverageSize();\n      }\n\n      const pos = this._physicalMax + margin;\n      items.set(this._last, {\n        pos,\n        size\n      });\n      this._physicalMax += margin + size;\n\n      if (this._stable === false && this._estimate === false) {\n        break;\n      }\n    } // This handles the cases where we were relying on estimated sizes.\n\n\n    const extentErr = this._calculateError();\n\n    if (extentErr) {\n      this._physicalMin -= extentErr;\n      this._physicalMax -= extentErr;\n      this._anchorPos -= extentErr;\n      this._scrollPosition -= extentErr;\n      items.forEach(item => item.pos -= extentErr);\n      this._scrollError += extentErr;\n    }\n\n    if (this._stable) {\n      this._newPhysicalItems = this._physicalItems;\n\n      this._newPhysicalItems.clear();\n\n      this._physicalItems = items;\n    }\n  }\n\n  _calculateError() {\n    var _a, _b;\n\n    const {\n      averageMarginSize\n    } = this._metricsCache;\n\n    if (this._first === 0) {\n      return this._physicalMin - ((_a = this._metricsCache.getMarginSize(0)) !== null && _a !== void 0 ? _a : averageMarginSize);\n    } else if (this._physicalMin <= 0) {\n      return this._physicalMin - this._first * this._delta;\n    } else if (this._last === this._totalItems - 1) {\n      return this._physicalMax + ((_b = this._metricsCache.getMarginSize(this._totalItems)) !== null && _b !== void 0 ? _b : averageMarginSize) - this._scrollSize;\n    } else if (this._physicalMax >= this._scrollSize) {\n      return this._physicalMax - this._scrollSize + (this._totalItems - 1 - this._last) * this._delta;\n    }\n\n    return 0;\n  } // TODO: Can this be made to inherit from base, with proper hooks?\n\n\n  _reflow() {\n    const {\n      _first,\n      _last,\n      _scrollSize\n    } = this;\n\n    this._updateScrollSize();\n\n    this._getActiveItems();\n\n    if (this._scrollSize !== _scrollSize) {\n      this._emitScrollSize();\n    }\n\n    this._updateVisibleIndices();\n\n    this._emitRange();\n\n    if (this._first === -1 && this._last === -1) {\n      this._resetReflowState();\n    } else if (this._first !== _first || this._last !== _last || this._needsRemeasure) {\n      this._emitChildPositions();\n\n      this._emitScrollError();\n    } else {\n      this._emitChildPositions();\n\n      this._emitScrollError();\n\n      this._resetReflowState();\n    }\n  }\n\n  _resetReflowState() {\n    this._anchorIdx = null;\n    this._anchorPos = null;\n    this._stable = true;\n  }\n\n  _updateScrollSize() {\n    const {\n      averageMarginSize\n    } = this._metricsCache;\n    this._scrollSize = Math.max(1, this._totalItems * (averageMarginSize + this._getAverageSize()) + averageMarginSize);\n  }\n  /**\n   * Returns the average size (precise or estimated) of an item in the scrolling direction,\n   * including any surrounding space.\n   */\n\n\n  get _delta() {\n    const {\n      averageMarginSize\n    } = this._metricsCache;\n    return this._getAverageSize() + averageMarginSize;\n  }\n  /**\n   * Returns the top and left positioning of the item at idx.\n   */\n\n\n  _getItemPosition(idx) {\n    var _a;\n\n    return {\n      [this._positionDim]: this._getPosition(idx),\n      [this._secondaryPositionDim]: 0,\n      [offset(this.direction)]: -((_a = this._metricsCache.getLeadingMarginValue(idx, this.direction)) !== null && _a !== void 0 ? _a : this._metricsCache.averageMarginSize)\n    };\n  }\n  /**\n   * Returns the height and width of the item at idx.\n   */\n\n\n  _getItemSize(idx) {\n    var _a;\n\n    return {\n      [this._sizeDim]: (this._getSize(idx) || this._getAverageSize()) + ((_a = this._metricsCache.getMarginSize(idx + 1)) !== null && _a !== void 0 ? _a : this._metricsCache.averageMarginSize),\n      [this._secondarySizeDim]: this._itemSize[this._secondarySizeDim]\n    };\n  }\n\n  _viewDim2Changed() {\n    this._needsRemeasure = true;\n\n    this._scheduleReflow();\n  }\n\n  _emitRange() {\n    const remeasure = this._needsRemeasure;\n    const stable = this._stable;\n    this._needsRemeasure = false;\n\n    super._emitRange({\n      remeasure,\n      stable\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/layouts/flow.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/layouts/shared/SizeCache.js":
/*!************************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/layouts/shared/SizeCache.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SizeCache\": () => (/* binding */ SizeCache)\n/* harmony export */ });\nclass SizeCache {\n  constructor(config) {\n    this._map = new Map();\n    this._roundAverageSize = true;\n    this.totalSize = 0;\n\n    if ((config === null || config === void 0 ? void 0 : config.roundAverageSize) === false) {\n      this._roundAverageSize = false;\n    }\n  }\n\n  set(index, value) {\n    const prev = this._map.get(index) || 0;\n\n    this._map.set(index, value);\n\n    this.totalSize += value - prev;\n  }\n\n  get averageSize() {\n    if (this._map.size > 0) {\n      const average = this.totalSize / this._map.size;\n      return this._roundAverageSize ? Math.round(average) : average;\n    }\n\n    return 0;\n  }\n\n  getSize(index) {\n    return this._map.get(index);\n  }\n\n  clear() {\n    this._map.clear();\n\n    this.totalSize = 0;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC1sYWJzL3ZpcnR1YWxpemVyL2xheW91dHMvc2hhcmVkL1NpemVDYWNoZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBSUE7QUFLQTtBQUpBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUNBOztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTs7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUNBO0FBQ0E7O0FBbENBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi4vLi4vc3JjL2xheW91dHMvc2hhcmVkL1NpemVDYWNoZS50cz83Y2IzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgU2l6ZUNhY2hlQ29uZmlnIHtcbiAgICByb3VuZEF2ZXJhZ2VTaXplPzogYm9vbGVhblxufVxuXG5leHBvcnQgY2xhc3MgU2l6ZUNhY2hlIHtcbiAgICBwcml2YXRlIF9tYXA6IE1hcDxudW1iZXIgfCBzdHJpbmcsIG51bWJlcj4gPSBuZXcgTWFwKCk7XG4gICAgcHJpdmF0ZSBfcm91bmRBdmVyYWdlU2l6ZSA9IHRydWU7XG4gICAgdG90YWxTaXplOiBudW1iZXIgPSAwO1xuXG4gICAgY29uc3RydWN0b3IoY29uZmlnPzogU2l6ZUNhY2hlQ29uZmlnKSB7XG4gICAgICAgIGlmIChjb25maWc/LnJvdW5kQXZlcmFnZVNpemUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICB0aGlzLl9yb3VuZEF2ZXJhZ2VTaXplID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gIFxuICAgIHNldChpbmRleDogbnVtYmVyIHwgc3RyaW5nLCB2YWx1ZTogbnVtYmVyKTogdm9pZCB7XG4gICAgICBjb25zdCBwcmV2ID0gdGhpcy5fbWFwLmdldChpbmRleCkgfHwgMDtcbiAgICAgIHRoaXMuX21hcC5zZXQoaW5kZXgsIHZhbHVlKTtcbiAgICAgIHRoaXMudG90YWxTaXplICs9IHZhbHVlIC0gcHJldjtcbiAgICB9XG4gIFxuICAgIGdldCBhdmVyYWdlU2l6ZSgpOiBudW1iZXIge1xuICAgICAgICBpZiAodGhpcy5fbWFwLnNpemUgPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBhdmVyYWdlID0gdGhpcy50b3RhbFNpemUgLyB0aGlzLl9tYXAuc2l6ZTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9yb3VuZEF2ZXJhZ2VTaXplXG4gICAgICAgICAgICA/IE1hdGgucm91bmQoYXZlcmFnZSlcbiAgICAgICAgICAgIDogYXZlcmFnZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG4gIFxuICAgIGdldFNpemUoaW5kZXg6IG51bWJlciB8IHN0cmluZykge1xuICAgICAgcmV0dXJuIHRoaXMuX21hcC5nZXQoaW5kZXgpO1xuICAgIH1cbiAgXG4gICAgY2xlYXIoKSB7XG4gICAgICB0aGlzLl9tYXAuY2xlYXIoKTtcbiAgICAgIHRoaXMudG90YWxTaXplID0gMDtcbiAgICB9XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/layouts/shared/SizeCache.js\n");

/***/ })

}]);