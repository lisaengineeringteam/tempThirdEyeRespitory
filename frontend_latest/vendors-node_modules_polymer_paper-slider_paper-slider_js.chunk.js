"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhome_assistant_frontend"] = self["webpackChunkhome_assistant_frontend"] || []).push([["vendors-node_modules_polymer_paper-slider_paper-slider_js"],{

/***/ "./node_modules/@polymer/iron-range-behavior/iron-range-behavior.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@polymer/iron-range-behavior/iron-range-behavior.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IronRangeBehavior\": () => (/* binding */ IronRangeBehavior)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * `iron-range-behavior` provides the behavior for something with a minimum to\n * maximum range.\n *\n * @demo demo/index.html\n * @polymerBehavior\n */\n\nconst IronRangeBehavior = {\n  properties: {\n    /**\n     * The number that represents the current value.\n     */\n    value: {\n      type: Number,\n      value: 0,\n      notify: true,\n      reflectToAttribute: true\n    },\n\n    /**\n     * The number that indicates the minimum value of the range.\n     */\n    min: {\n      type: Number,\n      value: 0,\n      notify: true\n    },\n\n    /**\n     * The number that indicates the maximum value of the range.\n     */\n    max: {\n      type: Number,\n      value: 100,\n      notify: true\n    },\n\n    /**\n     * Specifies the value granularity of the range's value.\n     */\n    step: {\n      type: Number,\n      value: 1,\n      notify: true\n    },\n\n    /**\n     * Returns the ratio of the value.\n     */\n    ratio: {\n      type: Number,\n      value: 0,\n      readOnly: true,\n      notify: true\n    }\n  },\n  observers: ['_update(value, min, max, step)'],\n  _calcRatio: function (value) {\n    return (this._clampValue(value) - this.min) / (this.max - this.min);\n  },\n  _clampValue: function (value) {\n    return Math.min(this.max, Math.max(this.min, this._calcStep(value)));\n  },\n  _calcStep: function (value) {\n    // polymer/issues/2493\n    value = parseFloat(value);\n\n    if (!this.step) {\n      return value;\n    }\n\n    var numSteps = Math.round((value - this.min) / this.step);\n\n    if (this.step < 1) {\n      /**\n       * For small values of this.step, if we calculate the step using\n       * `Math.round(value / step) * step` we may hit a precision point issue\n       * eg. 0.1 * 0.2 =  0.020000000000000004\n       * http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\n       *\n       * as a work around we can divide by the reciprocal of `step`\n       */\n      return numSteps / (1 / this.step) + this.min;\n    } else {\n      return numSteps * this.step + this.min;\n    }\n  },\n  _validateValue: function () {\n    var v = this._clampValue(this.value);\n\n    this.value = this.oldValue = isNaN(v) ? this.oldValue : v;\n    return this.value !== v;\n  },\n  _update: function () {\n    this._validateValue();\n\n    this._setRatio(this._calcRatio(this.value) * 100);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvaXJvbi1yYW5nZS1iZWhhdmlvci9pcm9uLXJhbmdlLWJlaGF2aW9yLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBekJBO0FBNEJBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUF6RUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcG9seW1lci9pcm9uLXJhbmdlLWJlaGF2aW9yL2lyb24tcmFuZ2UtYmVoYXZpb3IuanM/NWUxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbkBsaWNlbnNlXG5Db3B5cmlnaHQgKGMpIDIwMTUgVGhlIFBvbHltZXIgUHJvamVjdCBBdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuVGhpcyBjb2RlIG1heSBvbmx5IGJlIHVzZWQgdW5kZXIgdGhlIEJTRCBzdHlsZSBsaWNlbnNlIGZvdW5kIGF0XG5odHRwOi8vcG9seW1lci5naXRodWIuaW8vTElDRU5TRS50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdFxuaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0FVVEhPUlMudHh0IFRoZSBjb21wbGV0ZSBzZXQgb2YgY29udHJpYnV0b3JzIG1heSBiZVxuZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0NPTlRSSUJVVE9SUy50eHQgQ29kZSBkaXN0cmlidXRlZCBieSBHb29nbGUgYXNcbnBhcnQgb2YgdGhlIHBvbHltZXIgcHJvamVjdCBpcyBhbHNvIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnRcbmZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9QQVRFTlRTLnR4dFxuKi9cbmltcG9ydCAnQHBvbHltZXIvcG9seW1lci9wb2x5bWVyLWxlZ2FjeS5qcyc7XG5cbi8qKlxuICogYGlyb24tcmFuZ2UtYmVoYXZpb3JgIHByb3ZpZGVzIHRoZSBiZWhhdmlvciBmb3Igc29tZXRoaW5nIHdpdGggYSBtaW5pbXVtIHRvXG4gKiBtYXhpbXVtIHJhbmdlLlxuICpcbiAqIEBkZW1vIGRlbW8vaW5kZXguaHRtbFxuICogQHBvbHltZXJCZWhhdmlvclxuICovXG5leHBvcnQgY29uc3QgSXJvblJhbmdlQmVoYXZpb3IgPSB7XG5cbiAgcHJvcGVydGllczoge1xuXG4gICAgLyoqXG4gICAgICogVGhlIG51bWJlciB0aGF0IHJlcHJlc2VudHMgdGhlIGN1cnJlbnQgdmFsdWUuXG4gICAgICovXG4gICAgdmFsdWU6IHt0eXBlOiBOdW1iZXIsIHZhbHVlOiAwLCBub3RpZnk6IHRydWUsIHJlZmxlY3RUb0F0dHJpYnV0ZTogdHJ1ZX0sXG5cbiAgICAvKipcbiAgICAgKiBUaGUgbnVtYmVyIHRoYXQgaW5kaWNhdGVzIHRoZSBtaW5pbXVtIHZhbHVlIG9mIHRoZSByYW5nZS5cbiAgICAgKi9cbiAgICBtaW46IHt0eXBlOiBOdW1iZXIsIHZhbHVlOiAwLCBub3RpZnk6IHRydWV9LFxuXG4gICAgLyoqXG4gICAgICogVGhlIG51bWJlciB0aGF0IGluZGljYXRlcyB0aGUgbWF4aW11bSB2YWx1ZSBvZiB0aGUgcmFuZ2UuXG4gICAgICovXG4gICAgbWF4OiB7dHlwZTogTnVtYmVyLCB2YWx1ZTogMTAwLCBub3RpZnk6IHRydWV9LFxuXG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSB2YWx1ZSBncmFudWxhcml0eSBvZiB0aGUgcmFuZ2UncyB2YWx1ZS5cbiAgICAgKi9cbiAgICBzdGVwOiB7dHlwZTogTnVtYmVyLCB2YWx1ZTogMSwgbm90aWZ5OiB0cnVlfSxcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHJhdGlvIG9mIHRoZSB2YWx1ZS5cbiAgICAgKi9cbiAgICByYXRpbzoge3R5cGU6IE51bWJlciwgdmFsdWU6IDAsIHJlYWRPbmx5OiB0cnVlLCBub3RpZnk6IHRydWV9LFxuICB9LFxuXG4gIG9ic2VydmVyczogWydfdXBkYXRlKHZhbHVlLCBtaW4sIG1heCwgc3RlcCknXSxcblxuICBfY2FsY1JhdGlvOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiAodGhpcy5fY2xhbXBWYWx1ZSh2YWx1ZSkgLSB0aGlzLm1pbikgLyAodGhpcy5tYXggLSB0aGlzLm1pbik7XG4gIH0sXG5cbiAgX2NsYW1wVmFsdWU6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIE1hdGgubWluKHRoaXMubWF4LCBNYXRoLm1heCh0aGlzLm1pbiwgdGhpcy5fY2FsY1N0ZXAodmFsdWUpKSk7XG4gIH0sXG5cbiAgX2NhbGNTdGVwOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgIC8vIHBvbHltZXIvaXNzdWVzLzI0OTNcbiAgICB2YWx1ZSA9IHBhcnNlRmxvYXQodmFsdWUpO1xuXG4gICAgaWYgKCF0aGlzLnN0ZXApIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICB2YXIgbnVtU3RlcHMgPSBNYXRoLnJvdW5kKCh2YWx1ZSAtIHRoaXMubWluKSAvIHRoaXMuc3RlcCk7XG4gICAgaWYgKHRoaXMuc3RlcCA8IDEpIHtcbiAgICAgIC8qKlxuICAgICAgICogRm9yIHNtYWxsIHZhbHVlcyBvZiB0aGlzLnN0ZXAsIGlmIHdlIGNhbGN1bGF0ZSB0aGUgc3RlcCB1c2luZ1xuICAgICAgICogYE1hdGgucm91bmQodmFsdWUgLyBzdGVwKSAqIHN0ZXBgIHdlIG1heSBoaXQgYSBwcmVjaXNpb24gcG9pbnQgaXNzdWVcbiAgICAgICAqIGVnLiAwLjEgKiAwLjIgPSAgMC4wMjAwMDAwMDAwMDAwMDAwMDRcbiAgICAgICAqIGh0dHA6Ly9kb2NzLm9yYWNsZS5jb20vY2QvRTE5OTU3LTAxLzgwNi0zNTY4L25jZ19nb2xkYmVyZy5odG1sXG4gICAgICAgKlxuICAgICAgICogYXMgYSB3b3JrIGFyb3VuZCB3ZSBjYW4gZGl2aWRlIGJ5IHRoZSByZWNpcHJvY2FsIG9mIGBzdGVwYFxuICAgICAgICovXG4gICAgICByZXR1cm4gbnVtU3RlcHMgLyAoMSAvIHRoaXMuc3RlcCkgKyB0aGlzLm1pbjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG51bVN0ZXBzICogdGhpcy5zdGVwICsgdGhpcy5taW47XG4gICAgfVxuICB9LFxuXG4gIF92YWxpZGF0ZVZhbHVlOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHRoaXMuX2NsYW1wVmFsdWUodGhpcy52YWx1ZSk7XG4gICAgdGhpcy52YWx1ZSA9IHRoaXMub2xkVmFsdWUgPSBpc05hTih2KSA/IHRoaXMub2xkVmFsdWUgOiB2O1xuICAgIHJldHVybiB0aGlzLnZhbHVlICE9PSB2O1xuICB9LFxuXG4gIF91cGRhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3ZhbGlkYXRlVmFsdWUoKTtcbiAgICB0aGlzLl9zZXRSYXRpbyh0aGlzLl9jYWxjUmF0aW8odGhpcy52YWx1ZSkgKiAxMDApO1xuICB9XG5cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@polymer/iron-range-behavior/iron-range-behavior.js\n");

/***/ }),

/***/ "./node_modules/@polymer/paper-progress/paper-progress.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polymer/paper-progress/paper-progress.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_iron_flex_layout_iron_flex_layout_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/iron-flex-layout/iron-flex-layout.js */ \"./node_modules/@polymer/iron-flex-layout/iron-flex-layout.js\");\n/* harmony import */ var _polymer_paper_styles_color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/paper-styles/color.js */ \"./node_modules/@polymer/paper-styles/color.js\");\n/* harmony import */ var _polymer_paper_styles_color_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_polymer_paper_styles_color_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _polymer_iron_range_behavior_iron_range_behavior_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/iron-range-behavior/iron-range-behavior.js */ \"./node_modules/@polymer/iron-range-behavior/iron-range-behavior.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n/**\nMaterial design: [Progress &\nactivity](https://www.google.com/design/spec/components/progress-activity.html)\n\nThe progress bars are for situations where the percentage completed can be\ndetermined. They give users a quick sense of how much longer an operation\nwill take.\n\nExample:\n\n    <paper-progress value=\"10\"></paper-progress>\n\nThere is also a secondary progress which is useful for displaying intermediate\nprogress, such as the buffer level during a streaming playback progress bar.\n\nExample:\n\n    <paper-progress value=\"10\" secondary-progress=\"30\"></paper-progress>\n\n### Styling progress bar:\n\nTo change the active progress bar color:\n\n    paper-progress {\n       --paper-progress-active-color: #e91e63;\n    }\n\nTo change the secondary progress bar color:\n\n    paper-progress {\n      --paper-progress-secondary-color: #f8bbd0;\n    }\n\nTo change the progress bar background color:\n\n    paper-progress {\n      --paper-progress-container-color: #64ffda;\n    }\n\nAdd the class `transiting` to a paper-progress to animate the progress bar when\nthe value changed. You can also customize the transition:\n\n    paper-progress {\n      --paper-progress-transition-duration: 0.08s;\n      --paper-progress-transition-timing-function: ease;\n      --paper-progress-transition-delay: 0s;\n    }\n\nTo change the duration of the indeterminate cycle:\n\n    paper-progress {\n      --paper-progress-indeterminate-cycle-duration: 2s;\n    }\n\nThe following mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|---------\n`--paper-progress-container` | Mixin applied to container | `{}`\n`--paper-progress-transition-duration` | Duration of the transition | `0.08s`\n`--paper-progress-transition-timing-function` | The timing function for the transition | `ease`\n`--paper-progress-transition-delay` | delay for the transition | `0s`\n`--paper-progress-container-color` | Color of the container | `--google-grey-300`\n`--paper-progress-active-color` | The color of the active bar | `--google-green-500`\n`--paper-progress-secondary-color` | The color of the secondary bar | `--google-green-100`\n`--paper-progress-disabled-active-color` | The color of the active bar if disabled | `--google-grey-500`\n`--paper-progress-disabled-secondary-color` | The color of the secondary bar if disabled  | `--google-grey-300`\n`--paper-progress-height` | The height of the progress bar | `4px`\n`--paper-progress-indeterminate-cycle-duration` | Duration of an indeterminate cycle | `2s`\n\n@group Paper Elements\n@element paper-progress\n@demo demo/index.html\n*/\n\n(0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__.Polymer)({\n  _template: _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__.html`\n    <style>\n      :host {\n        display: block;\n        width: 200px;\n        position: relative;\n        overflow: hidden;\n      }\n\n      :host([hidden]), [hidden] {\n        display: none !important;\n      }\n\n      #progressContainer {\n        @apply --paper-progress-container;\n        position: relative;\n      }\n\n      #progressContainer,\n      /* the stripe for the indeterminate animation*/\n      .indeterminate::after {\n        height: var(--paper-progress-height, 4px);\n      }\n\n      #primaryProgress,\n      #secondaryProgress,\n      .indeterminate::after {\n        @apply --layout-fit;\n      }\n\n      #progressContainer,\n      .indeterminate::after {\n        background: var(--paper-progress-container-color, var(--google-grey-300));\n      }\n\n      :host(.transiting) #primaryProgress,\n      :host(.transiting) #secondaryProgress {\n        -webkit-transition-property: -webkit-transform;\n        transition-property: transform;\n\n        /* Duration */\n        -webkit-transition-duration: var(--paper-progress-transition-duration, 0.08s);\n        transition-duration: var(--paper-progress-transition-duration, 0.08s);\n\n        /* Timing function */\n        -webkit-transition-timing-function: var(--paper-progress-transition-timing-function, ease);\n        transition-timing-function: var(--paper-progress-transition-timing-function, ease);\n\n        /* Delay */\n        -webkit-transition-delay: var(--paper-progress-transition-delay, 0s);\n        transition-delay: var(--paper-progress-transition-delay, 0s);\n      }\n\n      #primaryProgress,\n      #secondaryProgress {\n        @apply --layout-fit;\n        -webkit-transform-origin: left center;\n        transform-origin: left center;\n        -webkit-transform: scaleX(0);\n        transform: scaleX(0);\n        will-change: transform;\n      }\n\n      #primaryProgress {\n        background: var(--paper-progress-active-color, var(--google-green-500));\n      }\n\n      #secondaryProgress {\n        background: var(--paper-progress-secondary-color, var(--google-green-100));\n      }\n\n      :host([disabled]) #primaryProgress {\n        background: var(--paper-progress-disabled-active-color, var(--google-grey-500));\n      }\n\n      :host([disabled]) #secondaryProgress {\n        background: var(--paper-progress-disabled-secondary-color, var(--google-grey-300));\n      }\n\n      :host(:not([disabled])) #primaryProgress.indeterminate {\n        -webkit-transform-origin: right center;\n        transform-origin: right center;\n        -webkit-animation: indeterminate-bar var(--paper-progress-indeterminate-cycle-duration, 2s) linear infinite;\n        animation: indeterminate-bar var(--paper-progress-indeterminate-cycle-duration, 2s) linear infinite;\n      }\n\n      :host(:not([disabled])) #primaryProgress.indeterminate::after {\n        content: \"\";\n        -webkit-transform-origin: center center;\n        transform-origin: center center;\n\n        -webkit-animation: indeterminate-splitter var(--paper-progress-indeterminate-cycle-duration, 2s) linear infinite;\n        animation: indeterminate-splitter var(--paper-progress-indeterminate-cycle-duration, 2s) linear infinite;\n      }\n\n      @-webkit-keyframes indeterminate-bar {\n        0% {\n          -webkit-transform: scaleX(1) translateX(-100%);\n        }\n        50% {\n          -webkit-transform: scaleX(1) translateX(0%);\n        }\n        75% {\n          -webkit-transform: scaleX(1) translateX(0%);\n          -webkit-animation-timing-function: cubic-bezier(.28,.62,.37,.91);\n        }\n        100% {\n          -webkit-transform: scaleX(0) translateX(0%);\n        }\n      }\n\n      @-webkit-keyframes indeterminate-splitter {\n        0% {\n          -webkit-transform: scaleX(.75) translateX(-125%);\n        }\n        30% {\n          -webkit-transform: scaleX(.75) translateX(-125%);\n          -webkit-animation-timing-function: cubic-bezier(.42,0,.6,.8);\n        }\n        90% {\n          -webkit-transform: scaleX(.75) translateX(125%);\n        }\n        100% {\n          -webkit-transform: scaleX(.75) translateX(125%);\n        }\n      }\n\n      @keyframes indeterminate-bar {\n        0% {\n          transform: scaleX(1) translateX(-100%);\n        }\n        50% {\n          transform: scaleX(1) translateX(0%);\n        }\n        75% {\n          transform: scaleX(1) translateX(0%);\n          animation-timing-function: cubic-bezier(.28,.62,.37,.91);\n        }\n        100% {\n          transform: scaleX(0) translateX(0%);\n        }\n      }\n\n      @keyframes indeterminate-splitter {\n        0% {\n          transform: scaleX(.75) translateX(-125%);\n        }\n        30% {\n          transform: scaleX(.75) translateX(-125%);\n          animation-timing-function: cubic-bezier(.42,0,.6,.8);\n        }\n        90% {\n          transform: scaleX(.75) translateX(125%);\n        }\n        100% {\n          transform: scaleX(.75) translateX(125%);\n        }\n      }\n    </style>\n\n    <div id=\"progressContainer\">\n      <div id=\"secondaryProgress\" hidden\\$=\"[[_hideSecondaryProgress(secondaryRatio)]]\"></div>\n      <div id=\"primaryProgress\"></div>\n    </div>\n`,\n  is: 'paper-progress',\n  behaviors: [_polymer_iron_range_behavior_iron_range_behavior_js__WEBPACK_IMPORTED_MODULE_3__.IronRangeBehavior],\n  properties: {\n    /**\n     * The number that represents the current secondary progress.\n     */\n    secondaryProgress: {\n      type: Number,\n      value: 0\n    },\n\n    /**\n     * The secondary ratio\n     */\n    secondaryRatio: {\n      type: Number,\n      value: 0,\n      readOnly: true\n    },\n\n    /**\n     * Use an indeterminate progress indicator.\n     */\n    indeterminate: {\n      type: Boolean,\n      value: false,\n      observer: '_toggleIndeterminate'\n    },\n\n    /**\n     * True if the progress is disabled.\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      observer: '_disabledChanged'\n    }\n  },\n  observers: ['_progressChanged(secondaryProgress, value, min, max, indeterminate)'],\n  hostAttributes: {\n    role: 'progressbar'\n  },\n  _toggleIndeterminate: function (indeterminate) {\n    // If we use attribute/class binding, the animation sometimes doesn't\n    // translate properly on Safari 7.1. So instead, we toggle the class here in\n    // the update method.\n    this.toggleClass('indeterminate', indeterminate, this.$.primaryProgress);\n  },\n  _transformProgress: function (progress, ratio) {\n    var transform = 'scaleX(' + ratio / 100 + ')';\n    progress.style.transform = progress.style.webkitTransform = transform;\n  },\n  _mainRatioChanged: function (ratio) {\n    this._transformProgress(this.$.primaryProgress, ratio);\n  },\n  _progressChanged: function (secondaryProgress, value, min, max, indeterminate) {\n    secondaryProgress = this._clampValue(secondaryProgress);\n    value = this._clampValue(value);\n    var secondaryRatio = this._calcRatio(secondaryProgress) * 100;\n    var mainRatio = this._calcRatio(value) * 100;\n\n    this._setSecondaryRatio(secondaryRatio);\n\n    this._transformProgress(this.$.secondaryProgress, secondaryRatio);\n\n    this._transformProgress(this.$.primaryProgress, mainRatio);\n\n    this.secondaryProgress = secondaryProgress;\n\n    if (indeterminate) {\n      this.removeAttribute('aria-valuenow');\n    } else {\n      this.setAttribute('aria-valuenow', value);\n    }\n\n    this.setAttribute('aria-valuemin', min);\n    this.setAttribute('aria-valuemax', max);\n  },\n  _disabledChanged: function (disabled) {\n    this.setAttribute('aria-disabled', disabled ? 'true' : 'false');\n  },\n  _hideSecondaryProgress: function (secondaryRatio) {\n    return secondaryRatio === 0;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-progress/paper-progress.js\n");

/***/ }),

/***/ "./node_modules/@polymer/paper-slider/paper-slider.js":
/*!************************************************************!*\
  !*** ./node_modules/@polymer/paper-slider/paper-slider.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polymer_iron_flex_layout_iron_flex_layout_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/iron-flex-layout/iron-flex-layout.js */ \"./node_modules/@polymer/iron-flex-layout/iron-flex-layout.js\");\n/* harmony import */ var _polymer_paper_input_paper_input_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/paper-input/paper-input.js */ \"./node_modules/@polymer/paper-input/paper-input.js\");\n/* harmony import */ var _polymer_paper_progress_paper_progress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/paper-progress/paper-progress.js */ \"./node_modules/@polymer/paper-progress/paper-progress.js\");\n/* harmony import */ var _polymer_paper_styles_color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/paper-styles/color.js */ \"./node_modules/@polymer/paper-styles/color.js\");\n/* harmony import */ var _polymer_paper_styles_color_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_polymer_paper_styles_color_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _polymer_iron_a11y_keys_behavior_iron_a11y_keys_behavior_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js */ \"./node_modules/@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js\");\n/* harmony import */ var _polymer_iron_form_element_behavior_iron_form_element_behavior_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polymer/iron-form-element-behavior/iron-form-element-behavior.js */ \"./node_modules/@polymer/iron-form-element-behavior/iron-form-element-behavior.js\");\n/* harmony import */ var _polymer_iron_range_behavior_iron_range_behavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @polymer/iron-range-behavior/iron-range-behavior.js */ \"./node_modules/@polymer/iron-range-behavior/iron-range-behavior.js\");\n/* harmony import */ var _polymer_paper_behaviors_paper_inky_focus_behavior_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @polymer/paper-behaviors/paper-inky-focus-behavior.js */ \"./node_modules/@polymer/paper-behaviors/paper-inky-focus-behavior.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_gestures_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @polymer/polymer/lib/utils/gestures.js */ \"./node_modules/@polymer/polymer/lib/utils/gestures.js\");\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n\n\n\n\n\nconst template = _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_10__.html`\n  <style>\n    :host {\n      @apply --layout;\n      @apply --layout-justified;\n      @apply --layout-center;\n      width: 200px;\n      cursor: default;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      --paper-progress-active-color: var(--paper-slider-active-color, var(--google-blue-700));\n      --paper-progress-secondary-color: var(--paper-slider-secondary-color, var(--google-blue-300));\n      --paper-progress-disabled-active-color: var(--paper-slider-disabled-active-color, var(--paper-grey-400));\n      --paper-progress-disabled-secondary-color: var(--paper-slider-disabled-secondary-color, var(--paper-grey-400));\n      --calculated-paper-slider-height: var(--paper-slider-height, 2px);\n    }\n\n    /* focus shows the ripple */\n    :host(:focus) {\n      outline: none;\n    }\n\n    /**\n      * NOTE(keanulee): Though :host-context is not universally supported, some pages\n      * still rely on paper-slider being flipped when dir=\"rtl\" is set on body. For full\n      * compatibility, dir=\"rtl\" must be explicitly set on paper-slider.\n      */\n    :dir(rtl) #sliderContainer {\n      -webkit-transform: scaleX(-1);\n      transform: scaleX(-1);\n    }\n\n    /**\n      * NOTE(keanulee): This is separate from the rule above because :host-context may\n      * not be recognized.\n      */\n    :host([dir=\"rtl\"]) #sliderContainer {\n      -webkit-transform: scaleX(-1);\n      transform: scaleX(-1);\n    }\n\n    /**\n      * NOTE(keanulee): Needed to override the :host-context rule (where supported)\n      * to support LTR sliders in RTL pages.\n      */\n    :host([dir=\"ltr\"]) #sliderContainer {\n      -webkit-transform: scaleX(1);\n      transform: scaleX(1);\n    }\n\n    #sliderContainer {\n      position: relative;\n      width: 100%;\n      height: calc(30px + var(--calculated-paper-slider-height));\n      margin-left: calc(15px + var(--calculated-paper-slider-height)/2);\n      margin-right: calc(15px + var(--calculated-paper-slider-height)/2);\n    }\n\n    #sliderContainer:focus {\n      outline: 0;\n    }\n\n    #sliderContainer.editable {\n      margin-top: 12px;\n      margin-bottom: 12px;\n    }\n\n    .bar-container {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      overflow: hidden;\n    }\n\n    .ring > .bar-container {\n      left: calc(5px + var(--calculated-paper-slider-height)/2);\n      transition: left 0.18s ease;\n    }\n\n    .ring.expand.dragging > .bar-container {\n      transition: none;\n    }\n\n    .ring.expand:not(.pin) > .bar-container {\n      left: calc(8px + var(--calculated-paper-slider-height)/2);\n    }\n\n    #sliderBar {\n      padding: 15px 0;\n      width: 100%;\n      background-color: var(--paper-slider-bar-color, transparent);\n      --paper-progress-container-color: var(--paper-slider-container-color, var(--paper-grey-400));\n      --paper-progress-height: var(--calculated-paper-slider-height);\n    }\n\n    .slider-markers {\n      position: absolute;\n      /* slider-knob is 30px + the slider-height so that the markers should start at a offset of 15px*/\n      top: 15px;\n      height: var(--calculated-paper-slider-height);\n      left: 0;\n      right: -1px;\n      box-sizing: border-box;\n      pointer-events: none;\n      @apply --layout-horizontal;\n    }\n\n    .slider-marker {\n      @apply --layout-flex;\n    }\n    .slider-markers::after,\n    .slider-marker::after {\n      content: \"\";\n      display: block;\n      margin-left: -1px;\n      width: 2px;\n      height: var(--calculated-paper-slider-height);\n      border-radius: 50%;\n      background-color: var(--paper-slider-markers-color, #000);\n    }\n\n    .slider-knob {\n      position: absolute;\n      left: 0;\n      top: 0;\n      margin-left: calc(-15px - var(--calculated-paper-slider-height)/2);\n      width: calc(30px + var(--calculated-paper-slider-height));\n      height: calc(30px + var(--calculated-paper-slider-height));\n    }\n\n    .transiting > .slider-knob {\n      transition: left 0.08s ease;\n    }\n\n    .slider-knob:focus {\n      outline: none;\n    }\n\n    .slider-knob.dragging {\n      transition: none;\n    }\n\n    .snaps > .slider-knob.dragging {\n      transition: -webkit-transform 0.08s ease;\n      transition: transform 0.08s ease;\n    }\n\n    .slider-knob-inner {\n      margin: 10px;\n      width: calc(100% - 20px);\n      height: calc(100% - 20px);\n      background-color: var(--paper-slider-knob-color, var(--google-blue-700));\n      border: 2px solid var(--paper-slider-knob-color, var(--google-blue-700));\n      border-radius: 50%;\n\n      -moz-box-sizing: border-box;\n      box-sizing: border-box;\n\n      transition-property: -webkit-transform, background-color, border;\n      transition-property: transform, background-color, border;\n      transition-duration: 0.18s;\n      transition-timing-function: ease;\n    }\n\n    .expand:not(.pin) > .slider-knob > .slider-knob-inner {\n      -webkit-transform: scale(1.5);\n      transform: scale(1.5);\n    }\n\n    .ring > .slider-knob > .slider-knob-inner {\n      background-color: var(--paper-slider-knob-start-color, transparent);\n      border: 2px solid var(--paper-slider-knob-start-border-color, var(--paper-grey-400));\n    }\n\n    .slider-knob-inner::before {\n      background-color: var(--paper-slider-pin-color, var(--google-blue-700));\n    }\n\n    .pin > .slider-knob > .slider-knob-inner::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 50%;\n      margin-left: -13px;\n      width: 26px;\n      height: 26px;\n      border-radius: 50% 50% 50% 0;\n\n      -webkit-transform: rotate(-45deg) scale(0) translate(0);\n      transform: rotate(-45deg) scale(0) translate(0);\n    }\n\n    .slider-knob-inner::before,\n    .slider-knob-inner::after {\n      transition: -webkit-transform .18s ease, background-color .18s ease;\n      transition: transform .18s ease, background-color .18s ease;\n    }\n\n    .pin.ring > .slider-knob > .slider-knob-inner::before {\n      background-color: var(--paper-slider-pin-start-color, var(--paper-grey-400));\n    }\n\n    .pin.expand > .slider-knob > .slider-knob-inner::before {\n      -webkit-transform: rotate(-45deg) scale(1) translate(17px, -17px);\n      transform: rotate(-45deg) scale(1) translate(17px, -17px);\n    }\n\n    .pin > .slider-knob > .slider-knob-inner::after {\n      content: attr(value);\n      position: absolute;\n      top: 0;\n      left: 50%;\n      margin-left: -16px;\n      width: 32px;\n      height: 26px;\n      text-align: center;\n      color: var(--paper-slider-font-color, #fff);\n      font-size: 10px;\n\n      -webkit-transform: scale(0) translate(0);\n      transform: scale(0) translate(0);\n    }\n\n    .pin.expand > .slider-knob > .slider-knob-inner::after {\n      -webkit-transform: scale(1) translate(0, -17px);\n      transform: scale(1) translate(0, -17px);\n    }\n\n    /* paper-input */\n    .slider-input {\n      width: 50px;\n      overflow: hidden;\n      --paper-input-container-input: {\n        text-align: center;\n        @apply --paper-slider-input-container-input;\n      };\n      @apply --paper-slider-input;\n    }\n\n    /* disabled state */\n    #sliderContainer.disabled {\n      pointer-events: none;\n    }\n\n    .disabled > .slider-knob > .slider-knob-inner {\n      background-color: var(--paper-slider-disabled-knob-color, var(--paper-grey-400));\n      border: 2px solid var(--paper-slider-disabled-knob-color, var(--paper-grey-400));\n      -webkit-transform: scale3d(0.75, 0.75, 1);\n      transform: scale3d(0.75, 0.75, 1);\n    }\n\n    .disabled.ring > .slider-knob > .slider-knob-inner {\n      background-color: var(--paper-slider-knob-start-color, transparent);\n      border: 2px solid var(--paper-slider-knob-start-border-color, var(--paper-grey-400));\n    }\n\n    paper-ripple {\n      color: var(--paper-slider-knob-color, var(--google-blue-700));\n    }\n  </style>\n\n  <div id=\"sliderContainer\" class\\$=\"[[_getClassNames(disabled, pin, snaps, immediateValue, min, expand, dragging, transiting, editable)]]\">\n    <div class=\"bar-container\">\n      <paper-progress disabled\\$=\"[[disabled]]\" id=\"sliderBar\" aria-hidden=\"true\" min=\"[[min]]\" max=\"[[max]]\" step=\"[[step]]\" value=\"[[immediateValue]]\" secondary-progress=\"[[secondaryProgress]]\" on-down=\"_bardown\" on-up=\"_resetKnob\" on-track=\"_bartrack\" on-tap=\"_barclick\">\n      </paper-progress>\n    </div>\n\n    <template is=\"dom-if\" if=\"[[snaps]]\">\n      <div class=\"slider-markers\">\n        <template is=\"dom-repeat\" items=\"[[markers]]\">\n          <div class=\"slider-marker\"></div>\n        </template>\n      </div>\n    </template>\n\n    <div id=\"sliderKnob\" class=\"slider-knob\" on-down=\"_knobdown\" on-up=\"_resetKnob\" on-track=\"_onTrack\" on-transitionend=\"_knobTransitionEnd\">\n        <div class=\"slider-knob-inner\" value\\$=\"[[immediateValue]]\"></div>\n    </div>\n  </div>\n\n  <template is=\"dom-if\" if=\"[[editable]]\">\n    <paper-input id=\"input\" type=\"number\" step=\"[[step]]\" min=\"[[min]]\" max=\"[[max]]\" class=\"slider-input\" disabled\\$=\"[[disabled]]\" value=\"[[immediateValue]]\" on-change=\"_changeValue\" on-keydown=\"_inputKeyDown\" no-label-float>\n    </paper-input>\n  </template>\n`;\ntemplate.setAttribute('strip-whitespace', '');\n/**\nMaterial design:\n[Sliders](https://www.google.com/design/spec/components/sliders.html)\n\n`paper-slider` allows user to select a value from a range of values by\nmoving the slider thumb.  The interactive nature of the slider makes it a\ngreat choice for settings that reflect intensity levels, such as volume,\nbrightness, or color saturation.\n\nExample:\n\n    <paper-slider></paper-slider>\n\nUse `min` and `max` to specify the slider range.  Default is 0 to 100.\n\nExample:\n\n    <paper-slider min=\"10\" max=\"200\" value=\"110\"></paper-slider>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-slider-container-color` | The background color of the bar | `--paper-grey-400`\n`--paper-slider-bar-color` | The background color of the slider | `transparent`\n`--paper-slider-active-color` | The progress bar color | `--google-blue-700`\n`--paper-slider-secondary-color` | The secondary progress bar color | `--google-blue-300`\n`--paper-slider-knob-color` | The knob color | `--google-blue-700`\n`--paper-slider-disabled-knob-color` | The disabled knob color | `--paper-grey-400`\n`--paper-slider-pin-color` | The pin color | `--google-blue-700`\n`--paper-slider-font-color` | The pin's text color | `#fff`\n`--paper-slider-markers-color` | The snaps markers color | `#000`\n`--paper-slider-disabled-active-color` | The disabled progress bar color | `--paper-grey-400`\n`--paper-slider-disabled-secondary-color` | The disabled secondary progress bar color | `--paper-grey-400`\n`--paper-slider-knob-start-color` | The fill color of the knob at the far left | `transparent`\n`--paper-slider-knob-start-border-color` | The border color of the knob at the far left | `--paper-grey-400`\n`--paper-slider-pin-start-color` | The color of the pin at the far left | `--paper-grey-400`\n`--paper-slider-height` | Height of the progress bar | `2px`\n`--paper-slider-input` | Mixin applied to the input in editable mode | `{}`\n`--paper-slider-input-container-input` | Mixin applied to the paper-input-container-input in editable mode | `{}`\n\n@group Paper Elements\n@element paper-slider\n@demo demo/index.html\n*/\n\n(0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_8__.Polymer)({\n  _template: template,\n  is: 'paper-slider',\n  behaviors: [_polymer_iron_a11y_keys_behavior_iron_a11y_keys_behavior_js__WEBPACK_IMPORTED_MODULE_4__.IronA11yKeysBehavior, _polymer_iron_form_element_behavior_iron_form_element_behavior_js__WEBPACK_IMPORTED_MODULE_5__.IronFormElementBehavior, _polymer_paper_behaviors_paper_inky_focus_behavior_js__WEBPACK_IMPORTED_MODULE_7__.PaperInkyFocusBehavior, _polymer_iron_range_behavior_iron_range_behavior_js__WEBPACK_IMPORTED_MODULE_6__.IronRangeBehavior],\n  properties: {\n    value: {\n      type: Number,\n      value: 0\n    },\n\n    /**\n     * If true, the slider thumb snaps to tick marks evenly spaced based\n     * on the `step` property value.\n     */\n    snaps: {\n      type: Boolean,\n      value: false,\n      notify: true\n    },\n\n    /**\n     * If true, a pin with numeric value label is shown when the slider thumb\n     * is pressed. Use for settings for which users need to know the exact\n     * value of the setting.\n     */\n    pin: {\n      type: Boolean,\n      value: false,\n      notify: true\n    },\n\n    /**\n     * The number that represents the current secondary progress.\n     */\n    secondaryProgress: {\n      type: Number,\n      value: 0,\n      notify: true,\n      observer: '_secondaryProgressChanged'\n    },\n\n    /**\n     * If true, an input is shown and user can use it to set the slider value.\n     */\n    editable: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * The immediate value of the slider.  This value is updated while the user\n     * is dragging the slider.\n     */\n    immediateValue: {\n      type: Number,\n      value: 0,\n      readOnly: true,\n      notify: true\n    },\n\n    /**\n     * The maximum number of markers\n     */\n    maxMarkers: {\n      type: Number,\n      value: 0,\n      notify: true\n    },\n\n    /**\n     * If true, the knob is expanded\n     */\n    expand: {\n      type: Boolean,\n      value: false,\n      readOnly: true\n    },\n\n    /**\n     * If true, a touchmove on the slider bar doesn't drag the slider thunb.\n     * Tapping on the slider bar still updates the slider's position\n     */\n    ignoreBarTouch: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * True when the user is dragging the slider.\n     */\n    dragging: {\n      type: Boolean,\n      value: false,\n      readOnly: true,\n      notify: true\n    },\n    transiting: {\n      type: Boolean,\n      value: false,\n      readOnly: true\n    },\n    markers: {\n      type: Array,\n      readOnly: true,\n      value: function () {\n        return [];\n      }\n    }\n  },\n  observers: ['_updateKnob(value, min, max, snaps, step)', '_valueChanged(value)', '_immediateValueChanged(immediateValue)', '_updateMarkers(maxMarkers, min, max, snaps)'],\n  hostAttributes: {\n    role: 'slider',\n    tabindex: 0\n  },\n\n  /** @type {!Object} */\n  keyBindings: {\n    'left': '_leftKey',\n    'right': '_rightKey',\n    'down pagedown home': '_decrementKey',\n    'up pageup end': '_incrementKey'\n  },\n  ready: function () {\n    if (this.ignoreBarTouch) {\n      (0,_polymer_polymer_lib_utils_gestures_js__WEBPACK_IMPORTED_MODULE_9__.setTouchAction)(this.$.sliderBar, 'auto');\n    }\n  },\n\n  /**\n   * Increases value by `step` but not above `max`.\n   * @method increment\n   */\n  increment: function () {\n    this.value = this._clampValue(this.value + this.step);\n  },\n\n  /**\n   * Decreases value by `step` but not below `min`.\n   * @method decrement\n   */\n  decrement: function () {\n    this.value = this._clampValue(this.value - this.step);\n  },\n  _updateKnob: function (value, min, max, snaps, step) {\n    this.setAttribute('aria-valuemin', min);\n    this.setAttribute('aria-valuemax', max);\n    this.setAttribute('aria-valuenow', value);\n\n    this._positionKnob(this._calcRatio(value) * 100);\n  },\n  _valueChanged: function () {\n    this.fire('value-change', {\n      composed: true\n    });\n  },\n  _immediateValueChanged: function () {\n    if (this.dragging) {\n      this.fire('immediate-value-change', {\n        composed: true\n      });\n    } else {\n      this.value = this.immediateValue;\n    }\n  },\n  _secondaryProgressChanged: function () {\n    this.secondaryProgress = this._clampValue(this.secondaryProgress);\n  },\n  _expandKnob: function () {\n    this._setExpand(true);\n  },\n  _resetKnob: function () {\n    this.cancelDebouncer('expandKnob');\n\n    this._setExpand(false);\n  },\n  _positionKnob: function (ratio) {\n    this._setImmediateValue(this._calcStep(this._calcKnobPosition(ratio)));\n\n    this._setRatio(this._calcRatio(this.immediateValue) * 100);\n\n    this.$.sliderKnob.style.left = this.ratio + '%';\n\n    if (this.dragging) {\n      this._knobstartx = this.ratio * this._w / 100;\n      this.translate3d(0, 0, 0, this.$.sliderKnob);\n    }\n  },\n  _calcKnobPosition: function (ratio) {\n    return (this.max - this.min) * ratio / 100 + this.min;\n  },\n  _onTrack: function (event) {\n    event.stopPropagation();\n\n    switch (event.detail.state) {\n      case 'start':\n        this._trackStart(event);\n\n        break;\n\n      case 'track':\n        this._trackX(event);\n\n        break;\n\n      case 'end':\n        this._trackEnd();\n\n        break;\n    }\n  },\n  _trackStart: function (event) {\n    this._setTransiting(false);\n\n    this._w = this.$.sliderBar.offsetWidth;\n    this._x = this.ratio * this._w / 100;\n    this._startx = this._x;\n    this._knobstartx = this._startx;\n    this._minx = -this._startx;\n    this._maxx = this._w - this._startx;\n    this.$.sliderKnob.classList.add('dragging');\n\n    this._setDragging(true);\n  },\n  _trackX: function (event) {\n    if (!this.dragging) {\n      this._trackStart(event);\n    }\n\n    var direction = this._isRTL ? -1 : 1;\n    var dx = Math.min(this._maxx, Math.max(this._minx, event.detail.dx * direction));\n    this._x = this._startx + dx;\n\n    var immediateValue = this._calcStep(this._calcKnobPosition(this._x / this._w * 100));\n\n    this._setImmediateValue(immediateValue); // update knob's position\n\n\n    var translateX = this._calcRatio(this.immediateValue) * this._w - this._knobstartx;\n\n    this.translate3d(translateX + 'px', 0, 0, this.$.sliderKnob);\n  },\n  _trackEnd: function () {\n    var s = this.$.sliderKnob.style;\n    this.$.sliderKnob.classList.remove('dragging');\n\n    this._setDragging(false);\n\n    this._resetKnob();\n\n    this.value = this.immediateValue;\n    s.transform = s.webkitTransform = '';\n    this.fire('change', {\n      composed: true\n    });\n  },\n  _knobdown: function (event) {\n    this._expandKnob(); // cancel selection\n\n\n    event.preventDefault(); // set the focus manually because we will called prevent default\n\n    this.focus();\n  },\n  _bartrack: function (event) {\n    if (this._allowBarEvent(event)) {\n      this._onTrack(event);\n    }\n  },\n  _barclick: function (event) {\n    this._w = this.$.sliderBar.offsetWidth;\n    var rect = this.$.sliderBar.getBoundingClientRect();\n    var ratio = (event.detail.x - rect.left) / this._w * 100;\n\n    if (this._isRTL) {\n      ratio = 100 - ratio;\n    }\n\n    var prevRatio = this.ratio;\n\n    this._setTransiting(true);\n\n    this._positionKnob(ratio); // if the ratio doesn't change, sliderKnob's animation won't start\n    // and `_knobTransitionEnd` won't be called\n    // Therefore, we need to manually update the `transiting` state\n\n\n    if (prevRatio === this.ratio) {\n      this._setTransiting(false);\n    }\n\n    this.async(function () {\n      this.fire('change', {\n        composed: true\n      });\n    }); // cancel selection\n\n    event.preventDefault(); // set the focus manually because we will called prevent default\n\n    this.focus();\n  },\n  _bardown: function (event) {\n    if (this._allowBarEvent(event)) {\n      this.debounce('expandKnob', this._expandKnob, 60);\n\n      this._barclick(event);\n    }\n  },\n  _knobTransitionEnd: function (event) {\n    if (event.target === this.$.sliderKnob) {\n      this._setTransiting(false);\n    }\n  },\n  _updateMarkers: function (maxMarkers, min, max, snaps) {\n    if (!snaps) {\n      this._setMarkers([]);\n    }\n\n    var steps = Math.round((max - min) / this.step);\n\n    if (steps > maxMarkers) {\n      steps = maxMarkers;\n    }\n\n    if (steps < 0 || !isFinite(steps)) {\n      steps = 0;\n    }\n\n    this._setMarkers(new Array(steps));\n  },\n  _mergeClasses: function (classes) {\n    return Object.keys(classes).filter(function (className) {\n      return classes[className];\n    }).join(' ');\n  },\n  _getClassNames: function () {\n    return this._mergeClasses({\n      disabled: this.disabled,\n      pin: this.pin,\n      snaps: this.snaps,\n      ring: this.immediateValue <= this.min,\n      expand: this.expand,\n      dragging: this.dragging,\n      transiting: this.transiting,\n      editable: this.editable\n    });\n  },\n  _allowBarEvent: function (event) {\n    return !this.ignoreBarTouch || event.detail.sourceEvent instanceof MouseEvent;\n  },\n\n  get _isRTL() {\n    if (this.__isRTL === undefined) {\n      this.__isRTL = window.getComputedStyle(this)['direction'] === 'rtl';\n    }\n\n    return this.__isRTL;\n  },\n\n  _leftKey: function (event) {\n    if (this._isRTL) this._incrementKey(event);else this._decrementKey(event);\n  },\n  _rightKey: function (event) {\n    if (this._isRTL) this._decrementKey(event);else this._incrementKey(event);\n  },\n  _incrementKey: function (event) {\n    if (!this.disabled) {\n      if (event.detail.key === 'end') {\n        this.value = this.max;\n      } else {\n        this.increment();\n      }\n\n      this.fire('change');\n      event.preventDefault();\n    }\n  },\n  _decrementKey: function (event) {\n    if (!this.disabled) {\n      if (event.detail.key === 'home') {\n        this.value = this.min;\n      } else {\n        this.decrement();\n      }\n\n      this.fire('change');\n      event.preventDefault();\n    }\n  },\n  _changeValue: function (event) {\n    this.value = event.target.value;\n    this.fire('change', {\n      composed: true\n    });\n  },\n  _inputKeyDown: function (event) {\n    event.stopPropagation();\n  },\n  // create the element ripple inside the `sliderKnob`\n  _createRipple: function () {\n    this._rippleContainer = this.$.sliderKnob;\n    return _polymer_paper_behaviors_paper_inky_focus_behavior_js__WEBPACK_IMPORTED_MODULE_7__.PaperInkyFocusBehaviorImpl._createRipple.call(this);\n  },\n  // Hide the ripple when user is not interacting with keyboard.\n  // This behavior is different from other ripple-y controls, but is\n  // according to spec:\n  // https://www.google.com/design/spec/components/sliders.html\n  _focusedChanged: function (receivedFocusFromKeyboard) {\n    if (receivedFocusFromKeyboard) {\n      this.ensureRipple();\n    }\n\n    if (this.hasRipple()) {\n      // note, ripple must be un-hidden prior to setting `holdDown`\n      if (receivedFocusFromKeyboard) {\n        this._ripple.style.display = '';\n      } else {\n        this._ripple.style.display = 'none';\n      }\n\n      this._ripple.holdDown = receivedFocusFromKeyboard;\n    }\n  }\n  /**\n   * Fired when the slider's value changes.\n   *\n   * @event value-change\n   */\n\n  /**\n   * Fired when the slider's immediateValue changes. Only occurs while the\n   * user is dragging.\n   *\n   * To detect changes to immediateValue that happen for any input (i.e.\n   * dragging, tapping, clicking, etc.) listen for immediate-value-changed\n   * instead.\n   *\n   * @event immediate-value-change\n   */\n\n  /**\n   * Fired when the slider's value changes due to user interaction.\n   *\n   * Changes to the slider's value due to changes in an underlying\n   * bound variable will not trigger this event.\n   *\n   * @event change\n   */\n\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-slider/paper-slider.js\n");

/***/ })

}]);